rem package components.ui.bound.grid

use ::components/bl/BusinessComponent.bbj::BusinessComponent
use ::components/ui/bound/UIComponent.bbj::UIComponent
use ::components/db/DataRow.bbj::DataRow
use ::components/db/DataRow.bbj::DataField
use ::components/ui/bound/grid/NavigationGridComponentConfigDialog.bbj::NavigationGridComponentConfigDialog
use ::components/ui/unbound/UIWidget.bbj::UIWidget
use ::components/bl/config/ConfigBucket.bbj::ConfigBucket
use ::components/ui/unbound/GoogleMapsAreaChooserDialog.bbj::GoogleMapsAreaChooserDialog
use ::translations/bbtranslator.bbj::BBTranslator
use ::components/i18n/i18n.bbj::i18n

use java.lang.Byte
use java.lang.Short
use java.lang.Double
use java.util.Date
use java.text.SimpleDateFormat
use java.io.FileInputStream
use java.io.FileOutputStream
use java.io.File

use org.apache.poi.hssf.usermodel.HSSFWorkbook
use org.apache.poi.hssf.usermodel.HSSFCell
use org.apache.poi.hssf.usermodel.HSSFSheet
use org.apache.poi.hssf.usermodel.HSSFRow
use org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator
use org.apache.poi.hssf.usermodel.HSSFCellStyle
use org.apache.poi.hssf.usermodel.HSSFFont
use org.apache.poi.hssf.usermodel.HSSFDataFormat
use org.apache.poi.hssf.usermodel.HSSFPalette
use org.apache.poi.ss.usermodel.DateUtil
use org.apache.poi.hssf.util.HSSFColor
use org.apache.poi.hssf.record.Record


class public NavigationGridComponentSelChangeEvent

    field public BBjVector SelectedRecords!

classend


class public NavigationGridComponentCellClickEvent

    field public DataRow SelectedRecord!
    field public BBjString Value$
    field public BBjNumber SelectedRow

classend


class public NavigationGridComponentContextMenuEvent

    field public DataRow SelectedRecord!
    field public BBjString Value$
    field public BBjString MenuID$
    field public BBjNumber SelectedRow

classend


class public NavigationGridComponentContextMenuItem

    field public BBjString  ID$
    field public BBjString  Caption$
    field public BBjString  Column$
    field public BBjNumber  Row
    field public Object     TargetObject!
    field public BBjString  TargetMethod$
    field public BBjImage   Image!

classend


class public DistinctFilterPopup

    field private BBjWindow parent!
    field private BBjTopLevelWindow frame!
    field private BBjButton C_BtnOk!
    field private BBjButton C_BtnCancel!

    field private java.util.TreeMap Distinct!
    field private java.util.TreeMap DistinctOrig!
    field public BBjNumber Aborted=0
    field private BBjStandardGrid C_DistinctGrid!

    field protected static BBTranslator  Translator! = i18n.getTranslator()


    method private DistinctFilterPopup()

    methodend

    method public DistinctFilterPopup(BBjWindow parent!, BBjNumber x, BBjNumber y, java.util.TreeMap distinct!)

        w=250
        h=400

        #Distinct! = distinct!
        #DistinctOrig! = distinct!

        #frame! = BBjAPI().getSysGui().addWindow(BBjAPI().getSysGui().getAvailableContext(),x,y,w,h,"",$01080000$ )
        #C_BtnCancel! = #frame!.addButton(2,w-80,h-25,75,20,#Translator!.getTranslation("CANCEL"))
        #C_BtnOk! = #frame!.addButton(1,w-160,h-25,75,20,#Translator!.getTranslation("OK"))


        #C_BtnOk!.setCallback(#C_BtnOk!.ON_BUTTON_PUSH,#this!,"onOK")
        #C_BtnCancel!.setCallback(#C_BtnCancel!.ON_BUTTON_PUSH,#this!,"onCancel")

        BBjAPI().setCustomEventCallback("OK","OK")
        BBjAPI().setCustomEventCallback("Cancel","Cancel")

        #C_DistinctGrid! = #frame!.addGrid(101,5,5,w-10,h-50,$0080$)
        #C_DistinctGrid!.setNumColumns(3)
        #C_DistinctGrid!.setNumRows(#Distinct!.size()+1)

        #C_DistinctGrid!.setColumnStyle(1,BBjGrid.GRID_STYLE_UNCHECKED)
        #C_DistinctGrid!.setColumnWidth(0,20)
        #C_DistinctGrid!.setColumnWidth(1,20)
        #C_DistinctGrid!.setColumnWidth(3,w-50)
        #C_DistinctGrid!.setColumnAlignment(2,BBjGrid.GRID_ALIGN_LEFT)

        #C_DistinctGrid!.setSelectionMode(BBjGrid.GRID_SELECT_ROW)
        #C_DistinctGrid!.setRowHeight(20)
        #C_DistinctGrid!.setHighlightMethod(BBjGrid.GRID_HIGHLIGHT_OUTLINE)
        #C_DistinctGrid!.setVerticalScrollable(1)


        ks! = #Distinct!.keySet()
        it! = ks!.iterator()
        r=1

        while it!.hasNext()
            k$=it!.next()
            checked = Distinct!.get(k$)
            #C_DistinctGrid!.setCellText(r,2,k$)

            if checked then
                #C_DistinctGrid!.setCellState(r,1,1)
                yes=yes+1
            else
                no=no+1
            fi

            r=r+1
        wend


        #C_DistinctGrid!.setCellText(0,2,"<All>")
        #C_DistinctGrid!.setCallback(BBjGrid.ON_GRID_MOUSE_UP,#this!,"onGridMouseUp")
        #C_DistinctGrid!.deselectAllCells()
        #updateAllSelector(yes,no)

        process_events


        Cancel:

        #Distinct!=#DistinctOrig!
        #Aborted=1
        OK:

        #frame!.destroy()

    methodend


    method public void onGridMouseUp(BBjGridMouseUpEvent ev!)

        row=ev!.getRow()

        if row=-1 then
            methodret
        fi

        state=#C_DistinctGrid!.getCellState(row,1)

        if state=0 then
            state =1
        else
            state =0
        fi


        if row=0 then
            if state=0 then
                no=1
                yes=0
            else
                no=0
                yes=1
            fi

            ks! = #Distinct!.keySet()
            it! = ks!.iterator()
            r=1

            while it!.hasNext()
                k$=it!.next()
                #C_DistinctGrid!.setCellState(r,1,state)
                #Distinct!.put(K$,state)
                r=r+1
            wend
        else
            #C_DistinctGrid!.setCellState(row,1,state)
            ks! = #Distinct!.keySet()
            it! = ks!.iterator()
            r=1

            while it!.hasNext()
                k$=it!.next()

                if r=row then
                    #Distinct!.put(K$,state)
                fi

                if #Distinct!.get(k$)=1 then
                    yes=yes+1
                else
                    no=no+1
                fi

                r=r+1
            wend
        fi

        #updateAllSelector(yes,no)

        #C_DistinctGrid!.deselectAllCells()

    methodend


    method private void updateAllSelector(BBjNumber yes, BBjNumber no)

        if no=0 then
            #C_DistinctGrid!.setCellStyle(0,1,BBjGrid.GRID_STYLE_CHECKED)
            #C_DistinctGrid!.setCellState(0,1,1)
            #C_DistinctGrid!.setCellImage(0,1,null())
        fi

        if yes=0 then
            #C_DistinctGrid!.setCellStyle(0,1,BBjGrid.GRID_STYLE_UNCHECKED)
            #C_DistinctGrid!.setCellState(0,1,0)
            #C_DistinctGrid!.setCellImage(0,1,null())
        fi

        if yes and no then
            rem #C_DistinctGrid!.setCellStyle(0,1,BBjGrid.GRID_STYLE_TEXT)
            #C_DistinctGrid!.setCellStyle(0,1,BBjGrid.GRID_STYLE_UNCHECKED)

            img! = BBjAPI().getSysGui().getImageManager().loadImageFromBytes($89504E470D0A1A0A0000000D494844520000000E0000000E0802000000902ABA86000000017352474200AECE1CE90000000467414D410000B18F0BFC6105000000097048597300000EC300000EC301C76FA8640000003549444154285363F84F346000AA9C4304002A832ACDC60B9E3F7F8EA2148F43B02865C00680468C2A25375C81FAF003686C11996000844075CCDE9B858F0000000049454E44AE426082$)

            #C_DistinctGrid!.setCellImage(0,1,img!)
        fi

    methodend


    method public void onOK(BBjButtonPushEvent ev!)

        BBjAPI().postPriorityCustomEvent("OK","")

    methodend


    method public void onCancel(BBjButtonPushEvent ev!)

        BBjAPI().postPriorityCustomEvent("Cancel","")

    methodend


    method public java.util.TreeMap getDistinct()

        methodret #Distinct!

    methodend

classend


class public NavigationGridComponent extends UIComponent implements UIWidget

    field private BBjButton         DropButton!
    field private BBjStandardGrid   Grid!
    field private BBjScrollBar      ScrollBar!
    field private BBjStaticText     InfoText!

    field private BBjNumber         InitGrid=1
    field private BBjNumber         VisibleRows=1
    field public  BBjVector         SelectedRows!
    field private BBjNumber         FirstRecordInGrid
    field private BBjNumber         LastRecordInGrid
    field private BBjVector         GridContents!

    field private DataRow           GridAttributes!
    field private BBjNumber         GridRowHeight = 22
    field private BBjVector         ColumnNames!

    field private BBjVector         RealtimeEdits!

    field private BBjNumber         ShowToolbar
    field private BBjNumber         ShowFilterRow
    field private BBjNumber         ShowTbFilter =1
    field private BBjNumber         ShowTbExcel  =0
    field private BBjNumber         ShowTbConfig =1

    field private BBjNumber         AllowFilterByDistinct =1

    field public BBjNumber          MultipleSelection =0

    field private BBjNumber         userInterrupt =0

    field private BBjString         SortOrder$
    field private BBjNumber         SortOrderForward=1

    field public BBjString FilenameExcel$ = "export.xls"

    field private BBjNumber         f_TbVisible
    field private BBjChildWindow    ToolBar!

    field private BBjStandardGrid   FilterGrid!
    field private java.util.HashMap FilterStrings!
    field private java.util.HashMap FilterByDistinct!
    field private java.util.HashMap QueryFilter!


    field private BBjToolButton     TbExcel!
    field private BBjToolButton     TbConfig!
    field private BBjToolButton     TbConfigSave!
    field private BBjToolButton     TbConfigDel!
    field private BBjToolButton     TbFilter!
    field private BBjToolButton     TbFilterGeo!
    field private BBjToolButton     TbFilterSave!
    field private BBjToolButton     TbFilterDel!
    field private BBjToolButton     TbAdminToggle!



    field public BBjString          ConfigBucketRealm$
    field public BBjString          ConfigBucketUser$   = info(3,2)
    field private BBjVector         FilterSaveConfigBuckets!
    field private BBjVector         ConfigSaveConfigBuckets!
    field private BBjVector         SetupConfigBuckets!
    field private BBjListEdit       LedFilterSave!
    field private BBjListEdit       LedConfigSave!
    field private BBjNumber         fAdminToggle=0
    field public BBjNumber          AdminMode=0
    field public BBjString          PresetConfig$

    field private BBjProgressBar    ProgressBar!
    field private BBjButton          BtnCancelProgress!

    field public static BBjNumber ON_NAVIGATION_GRID_COMPONENT_SELCHANGE
    field private Object SelChangeTargetObject!
    field private BBjString SelChangeTargetMethod$
    field private BBjNumber ContextMenuItemID = 100
    field private NavigationGridComponentContextMenuEvent TmpPopupMenuEvent!

    field private java.util.HashMap MouseLClickTargetObjectList!
    field private java.util.HashMap MouseLClickTargetMethodList!
    field private java.util.HashMap MouseDoubleClickTargetObjectList!
    field private java.util.HashMap MouseDoubleClickTargetMethodList!
    field private java.util.HashMap CellContextMenuList!
    field private java.util.TreeMap RowContextMenuList!


    field private BBjVector ColumnConfig!
    field private BBjString ColumnConfigTpl$ = "NAME:C(1*),DESC:C(1*),VISIBLE:N(1),WIDTH:N(5),CONTROL:C(1*),MASK:C(1*)"


    method public NavigationGridComponent ()

        #super!(null(),100,100,100,640,480)
        #initialize()

    methodend


    method public NavigationGridComponent (BBjChildWindow cw!)

        #super!(cw!)
        #initialize()

    methodend


    method public NavigationGridComponent (BBjWindow wnd!, BBjNumber id, BBjNumber x, BBjNumber y, BBjNumber w, BBjNumber h)

        #super!(wnd!,id,x,y,w,h)
        #initialize()

    methodend


    method protected void initialize()

REM         panel! = #getWnd().addChildWindow(100,0,0,#getWnd().getWidth(),#getH(),"",$00000800$,BBjAPI().getSysGui().getAvailableContext())
REM         #getLaf().prepareWindow(panel!)
        #Grid!      = #getWnd().addGrid(102,0,0,#getW(),#getH(),$0080$)
        #ScrollBar! = #getWnd().addVerticalScrollBar(103, #getW()+20,0, 20, #getH(),$0010$)
        #InfoText!  = #getWnd().addStaticText(104, #getW()-240,#getH(), 200, 22,"")
        #getLaf().setStyle(#InfoText!,"FormKey")
        #InfoText!.setAlignment(#InfoText!.ALIGN_RIGHT)

        rem #Grid!.setMainGridStripeColor(BBjAPI().getSysGui().makeColor(220,220,255))
        #Grid!.setHorizontalLinesVisible(1)
        #Grid!.setLineColor(BBjAPI().getSysGui().makeColor(220,220,255))

        #Grid!.setUserResizable(1)
        #Grid!.setNumRows(0)
        #Grid!.setNumColumns(0)
        #Grid!.setFocusable(0)

        #Grid!.setSelectionMode(#Grid!.GRID_SELECT_ROW)
        #Grid!.setVerticalScrollable(0)
        #Grid!.setHorizontalScrollable(1)
        #Grid!.setMultipleSelection(1)
        #Grid!.setRowHeight(#GridRowHeight)
        #Grid!.setColumnHeaderHeight(#GridRowHeight)
        #Grid!.setColumnHeaderAlignment(#Grid!.GRID_ALIGN_LEFT)


        #Grid!.setCallback(#Grid!.ON_GRID_SELECT_ROW,#this!,"onGridSelectRow")
        rem #Grid!.setCallback(#Grid!.ON_GRID_DOUBLE_CLICK,#this!,"onGridDoubleClick")
        #Grid!.setCallback(#Grid!.ON_GRID_KEYPRESS,#this!,"onGridKeypress")

        #Grid!.setCallback(#Grid!.ON_GRID_MOUSE_DOWN,#this!,"gridClick")

        rem #Grid!.setCallback(#Grid!.ON_GRID__MOUSE_DOWN,#this!,"gridRClick")

        #Grid!.setCallback(#Grid!.ON_GRID_LEFT_COLUMN_CHANGE,#this!,"gridLeftColumnChange")
        #Grid!.setCallback(#Grid!.ON_GRID_COLUMN_SIZE,#this!,"gridColumnSize")

        #ScrollBar!.setCallback(BBjAPI.ON_CONTROL_SCROLL,#this!,"onScroll")

        #MouseLClickTargetObjectList! = new java.util.HashMap()
        #MouseLClickTargetMethodList! = new java.util.HashMap()

        #MouseDoubleClickTargetObjectList! = new java.util.HashMap()
        #MouseDoubleClickTargetMethodList! = new java.util.HashMap()

        #CellContextMenuList! = new java.util.HashMap()
        #RowContextMenuList! = new java.util.TreeMap()

        #FilterSaveConfigBuckets! = new BBjVector()
        #ConfigSaveConfigBuckets! = new BBjVector()

        #super!.getWnd().setCallback(BBjAPI.ON_KEYPRESS,#this!,"onKeypress")

        #initVariables()

        #setGridPosition()

    methodend


    method public void onKeypress(BBjKeypressEvent ev!)

        kc=ev!.getKeyCode()

        if kc = 302 then
            rem down

            if #getBC().canSelectionChange(0) then
                if #getBC().getSelection().size()>0 then
                    recno = #getBC().getSelection().getItem(0)
                else
                    recno=-1
                fi

                if recno < #getBC().getResultSet().size()-1 then
                    recno=recno +1
                    v!=new BBjVector()
                    v!.addItem(recno)
                    #getBC().setSelection(v!)
                fi
            fi
        fi

        if kc=301 then
            rem up

            if #getBC().canSelectionChange(0) then
                if #getBC().getSelection().size()>0 then
                    recno = #getBC().getSelection().getItem(0)
                fi

                recno=max(0,recno-1)

                v!=new BBjVector()
                v!.addItem(recno)
                #getBC().setSelection(v!)
            fi
        fi

        if kc=306 then
            rem pgdn

            if #getBC().canSelectionChange(0) then
                if #getBC().getSelection().size()>0 then
                    recno = #getBC().getSelection().getItem(0)
                fi

                recno=min(#getBC().size()-1,recno+#Grid!.getVisibleRowCount())

                v!=new BBjVector()
                v!.addItem(recno)
                #getBC().setSelection(v!)
            fi
        fi


        if kc=305 then
            rem pgup

            if #getBC().canSelectionChange(0) then
                if #getBC().getSelection().size()>0 then
                    recno = #getBC().getSelection().getItem(0)
                fi

                recno=max(0,recno-#Grid!.getVisibleRowCount())

                v!=new BBjVector()
                v!.addItem(recno)
                #getBC().setSelection(v!)
            fi
        fi

        if kc=307 then
            rem pos1

            if #getBC().canSelectionChange(0) then
                recno = 0
                v!=new BBjVector()
                v!.addItem(recno)
                #getBC().setSelection(v!)
            fi
        fi

        if kc=308 then
            rem end

            if #getBC().canSelectionChange(0) then
                recno = #getBC().size()-1
                v!=new BBjVector()
                v!.addItem(recno)
                #getBC().setSelection(v!)
            fi
        fi

    methodend


    method private void initVariables()

        #ColumnConfig! = new BBjVector()
        #SelectedRows!=new BBjVector()
        #ColumnNames! =new BBjVector()
        #FilterStrings! = new java.util.HashMap()
        #FilterByDistinct! = new java.util.HashMap()

        #QueryFilter! = new java.util.HashMap()

        #Grid!.unsort()

    methodend


    method public void setCallback(BBjNumber eventtype, Object target!, BBjString methodName$)

        if eventtype = #ON_NAVIGATION_GRID_COMPONENT_SELCHANGE then
            #SelChangeTargetObject! = target!
            #SelChangeTargetMethod$ = methodName$
        fi

    methodend


    method public void setCellClickCallback(BBjString col$, Object target!, BBjString methodName$)

        #MouseLClickTargetObjectList!.put(col$,target!)
        #MouseLClickTargetMethodList!.put(col$,methodName$)

    methodend


    method public void setCellDoubleClickCallback(BBjString col$, BBjString methodName$)

        if #super!.getIsStandalone() then
            throw "Can't register Event on label in standalone-mode",250
        fi

        evid$=str(#this!)
        evid$=evid$(1,pos(" "=evid$)-1)+"CellDoubleClickCallback"

        #MouseDoubleClickTargetObjectList!.put(col$,null())
        #MouseDoubleClickTargetMethodList!.put(col$,evid$)

        BBjAPI().setCustomEventCallback(evid$,methodName$)

    methodend


    method public void setCellDoubleClickCallback(BBjString col$, Object target!, BBjString methodName$)

        #MouseDoubleClickTargetObjectList!.put(col$,target!)
        #MouseDoubleClickTargetMethodList!.put(col$,methodName$)

    methodend


    method public void setCellContextMenu(BBjString col$, BBjString caption$, BBjString menuID$, Object target!, BBjString methodName$)

        #setCellContextMenu(col$, caption$, menuID$, target!, methodName$, null())

    methodend


    method public void setCellContextMenu(BBjString col$, BBjString caption$, BBjString menuID$, Object target!, BBjString methodName$, BBjImage image!)

        menu! = new NavigationGridComponentContextMenuItem()

        menu!.setID(menuID$)
        menu!.setColumn(col$)

        menu!.setCaption(caption$)
        menu!.setTargetObject(target!)
        menu!.setTargetMethod(methodName$)

        menu!.setImage(image!)

        #CellContextMenuList!.put(#ContextMenuItemID,menu!)
        #ContextMenuItemID=#ContextMenuItemID+1

    methodend


    method public void setRowContextMenu(BBjString caption$, BBjString menuID$, Object target!, BBjString methodName$, BBjImage image!)

        #setRowContextMenu(-1, caption$, menuID$, target!, methodName$,image!)

    methodend


    method public void setRowContextMenu(BBjString caption$, BBjString menuID$, Object target!, BBjString methodName$)

        #setRowContextMenu(-1, caption$, menuID$, target!, methodName$,null())

    methodend


    method public void setRowContextMenu(BBjNumber row, BBjString caption$, BBjString menuID$, Object target!, BBjString methodName$)

        #setRowContextMenu(row, caption$, menuID$, target!, methodName$, null())

    methodend


    method public void setRowContextMenu(BBjNumber row, BBjString caption$, BBjString menuID$, Object target!, BBjString methodName$, BBjImage image!)

        menu! = new NavigationGridComponentContextMenuItem()

        menu!.setID(menuID$)
        menu!.setRow(row)

        menu!.setCaption(caption$)
        menu!.setTargetObject(target!)
        menu!.setTargetMethod(methodName$)

        menu!.setImage(image!)

        #RowContextMenuList!.put(#ContextMenuItemID,menu!)

        #ContextMenuItemID=#ContextMenuItemID+1

    methodend


    method public void onScroll(BBjControlScrollEvent ev!)

        if ev!.isAdjusting() then
            methodret
        fi

        p=ev!.getPosition()
        #getBC().prepareResultSet(max(0,p-2), p+#Grid!.getVisibleRowCount()+2)
        #pullRowsToGrid(p)

    methodend


    method public void userQueryInterrupt(BBjButtonPushEvent ev!)

        #userInterrupt = 1
        #Grid!.setTopRow(0)

    methodend


    method public BBjNumber interruptQueryCallback()

        methodret #userInterrupt

    methodend


    method public void setProgress(BBjNumber percentage)

        if #ProgressBar!<>null() then
            if percentage>0 then
                percentage=min(100,int(percentage/2))


                #ProgressBar!.setVisible(1)
                #ProgressBar!.setValue(percentage)
                #ProgressBar!.setText(str(percentage)+" %")
            else
                #ProgressBar!.setVisible(0)
            fi
        fi

    methodend


    method public void setGridRowHeight(BBjNumber h)

        #GridRowHeight = h
        #Grid!.setRowHeight(h)
        #Grid!.setColumnHeaderHeight(h)

    methodend


    method public void gridLeftColumnChange(BBjGridLeftColumnChangeEvent ev!)

        if #FilterGrid! <> null() then
            #this!.scrollFilterGrid()
        fi

    methodend


    method public void gridColumnSize(BBjGridColumnSizeEvent ev!)

        c=ev!.getColumn()
        s=ev!.getWidth()

        v!=#ColumnConfig!.getItem(c)
        v!.setFieldValue("WIDTH",s)
        #ColumnConfig!.removeItem(c)
        #ColumnConfig!.insertItem(c,v!)

        if #FilterGrid! <> null() then
            #FilterGrid!.setColumnWidth(c,s)
        fi

    methodend


    method private void updateSelection()

        if #MultipleSelection then
            v!=new BBjVector()
            i=0

            while i< #SelectedRows!.size()
                row! = #SelectedRows!.getItem(i)

                j=0

                while j<#GridContents!.size()
                    if #GridContents!.getItem(j) = row! then
                        v!.addItem(j)
                        break
                    fi

                    j=j+1
                wend

                i=i+1
            wend

            #getBC().setSelection(v!)
        else
            v! = #Grid!.getSelectedRows()
            #SelectedRows!.clear()

            if v!.size() > 0 then
                for i=0 to v!.size()-1
                    #SelectedRows!.addItem(v!.getItem(i)+#FirstRecordInGrid)
                next
            fi

            #getBC().setSelection(#SelectedRows!)
            #super!.getWnd().focus()
        fi

        declare NavigationGridComponentSelChangeEvent ev!
        ev! = new NavigationGridComponentSelChangeEvent()
        ev!.setSelectedRecords(#this!.getSelectedRows())
        #super!.invokeCallback(#SelChangeTargetObject!, #SelChangeTargetMethod$, ev!)

    methodend


    method public void onGridSelectRow(BBjGridSelectRowEvent ev!)

        if !#getBC().canSelectionChange(0) then
            #onSelectionChange()
        fi

        if #MultipleSelection then
            #Grid!.deselectAllCells()
        else
            #updateSelection()
        fi

    methodend


    method public void onGridKeypress(BBjGridKeypressEvent ev!)

        if ev!.getKeyCode()=10 then
            col=ev!.getColumn()
            row=ev!.getRow()

            if col>-1 and row>-1 then
                #doGridNotifySelect(col, row)
            fi
        fi

        rem 307=Pos1, 308=End

    methodend


    method public void onGridDoubleClick(BBjGridDoubleClickEvent ev!)

        col=ev!.getColumn()
        row=ev!.getRow()

        if col>-1 and row>-1 then
            #doGridNotifySelect(col, row)
        fi

    methodend


    method public void doGridNotifySelect(BBjNumber col, BBjNumber row)

        col$=#ColumnNames!.getItem(col)

        target!     =  #MouseDoubleClickTargetObjectList!.get("")
        methodName! = #MouseDoubleClickTargetMethodList!.get("")

        if target!=null() and methodName!=null() then
            target!     =  #MouseDoubleClickTargetObjectList!.get(col$)
            methodName! = #MouseDoubleClickTargetMethodList!.get(col$)
        fi

        if methodName! <> null() then
            declare NavigationGridComponentCellClickEvent ev!
            ev! = new NavigationGridComponentCellClickEvent()
            ev!.setValue(#Grid!.getCellText(row,col))
            ev!.setSelectedRecord(#FilteredGridContents!.getItem(row))
            ev!.setSelectedRow(row)

            if target! <> null() then
                #super!.invokeCallback(target!,methodName!, ev!)
            else
                BBjAPI().postPriorityCustomEvent(methodName!,ev!)
            fi

            methodret
        fi

        if #MultipleSelection=0  then
            #updateSelection()

            if #super!.getIsStandalone() then
                BBjAPI().postPriorityCustomEvent("ReturnAnswer",null())
            fi
        fi

    methodend


    method public void toggleSort(BBjString col$)

        sortRule$=#GridAttributes!.getFieldAttribute(col$,"SORT")

        if sortRule$="NONE" then
            methodret
        fi

        if col$=#SortOrder$ then
            if #SortOrderForward then
                #SortOrderForward = 0
            else
                #SortOrderForward = 1
            fi
        fi

        rem remove col header icon if any

        if #SortOrder$ > "" then
            for i=0 to #ColumnNames!.size()
                if #ColumnNames!.get(i) = #SortOrder$ then
                    break
                fi
            next

            #Grid!.setColumnHeaderCellImage(i,null())
        fi

        #SortOrder$ = col$


        rem set i to col number that it's about

        for i=0 to #ColumnNames!.size()
            if #ColumnNames!.get(i) = #SortOrder$ then
                break
            fi
        next


        if 0 then
            rem if #super!.getBC().isQueryComplete() then

            rem -------------------------sort in memory----------------------

            if #SortOrderForward = 1 then
                so = BBjGrid.SORT_ASCENDING
            else
                so = BBjGrid.SORT_DESCENDING
            fi

            if pos("RELATED" = sortRule$) then
                #Grid!.setColumnSortedByRelatedData(i,1)
            else
                #Grid!.sortByColumn(i,so)
            fi

            #Grid!.setColumnVisible(i)
        else
            rem -------------------------sort in bc----------------------

            if pos("RELATED" = sortRule$) or pos("UI_ONLY" = sortRule$)  then
                a=msgbox(#super!.getTranslator().getTranslation("CANNOT_SORT_BY")+" "+col$,0,#super!.getTranslator().getTranslation("SORT"))

                methodret
            fi

            if #super!.getBC().getAllowSort() then
                #super!.getBC().setSortOrder(col$,#SortOrderForward)

                if #SortOrderForward then
                    img!=BBjAPI().getSysGui().getImageManager().loadImageFromBytes
                else
                    img!=BBjAPI().getSysGui().getImageManager().loadImageFromBytes($89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF61000001A24944415478DA6360A00588ADEDF98F0B1365407455CFFFEFFFFF636090385106845774FF9F7BF3EFFFE6FD8FE118C407891365405049E7FF29977EFEAFDA711F8E417C90385106F8E6B7FFEF3EF5E57FE1865B700CE283C48932C03DBBE57FC3C1F7FFD3965F8563101F244E94018E690DFFCB77BCFC1F33EF3C1C83F820710CC50E590D3CD689B5C780F83F0CFB372EFF9FB3E1C9FFC0A927E118C4078923AB03E9031B621C5ACEEF9CDE767AD2F14FFF37FFF8FF7FF3CFFFFFFDA69CFDEFDA7D048E417C9038481EA40EA41EA40FEE1210C730BCFCAC53C5B2FF61736FFE77683FFCDFBA691F1C3B761C018B3B962FF96F1051791245330C6887160A6905979EB72A5AFCDF7BCA95FFA675FBFE1B54EEFC6F56BF1FCCB72C5CF45F2BA8F4AC1236CD30A0E2992BAAE2577CC93867FE7FA79EF3FF75CA768269A3EC79FF55FD8ACE6ABB170A118C0590210A5E855775D2E7FDB76C3DFD5F276DCE7F05AF82F33244686604620E20E611D177569371CBBDAD9634EB3F90BEC4A7E5A0021287CA33E2328013884581580E88D5B9A5345DC4ED92F77148A8D883F8507151A83A300000A64934D68A5D62BC0000000049454E44AE426082$)
                fi

                #Grid!.setColumnHeaderCellImage(i,img!)
            fi
        fi

    methodend


    method public void gridClick(BBjGridMouseDownEvent ev!)

        col=ev!.getColumn()

        if col=-1 then
            methodret
        fi

        row=ev!.getRow()

        if row=-1 then
            col$=#ColumnNames!.getItem(col)
            #toggleSort(col$)
        fi

        if col=-1 and #this!.getMultipleSelection() then
            row! = #FilteredGridContents!.getItem(row)

            found=0
            i=0

            while i<#SelectedRows!.size()
                if row!.equals(#SelectedRows!.getItem(i)) then
                    #SelectedRows!.removeItem(i)
                    found=1
                    break
                fi

                i=i+1
            wend

            if found then
                #Grid!.setRowHeaderCellStyle(row,#Grid!.GRID_STYLE_UNCHECKED)
            else
                #Grid!.setRowHeaderCellStyle(row,#Grid!.GRID_STYLE_CHECKED)
                #SelectedRows!.addItem(row!)
            fi

            #updateSelection()
        fi


        if col>-1 and 0 then
            rem TODO - send event

            if row>-1 then
                col$=#ColumnNames!.getItem(col)
                target!     =  #MouseLClickTargetObjectList!.get(col$)
                methodName! = #MouseLClickTargetMethodList!.get(col$)

                if target! <>null() and methodName! <> null() then
                    declare NavigationGridComponentCellClickEvent ev!
                    ev! = new NavigationGridComponentCellClickEvent()
                    ev!.setValue(#Grid!.getCellText(row,col))
                    ev!.setSelectedRecord(#FilteredGridContents!.getItem(row))
                    ev!.setSelectedRow(row)
                    #super!.invokeCallback(target!,methodName!, ev!)
                fi
            fi
        fi

    methodend


    method public void gridRClick(BBjGridRightMouseDownEvent ev!)

        declare         BBjPopupMenu menu!
        declare auto    NavigationGridComponentContextMenuItem item!
        declare         BBjMenuItem menuItem!


        col = ev!.getColumn()
        row = ev!.getRow()

        if row=-1 or col=-1 then
            methodret
        fi

        #Grid!.removePopupMenu()

        menu! = #Grid!.addPopupMenu()
        menu!.show(#Grid!,ev!.getXLocationInCell(), ev!.getYLocationInCell())

        col$="<NIL>"
        col$=#ColumnNames!.getItem(col,err=*next)


        #TmpPopupMenuEvent! = new NavigationGridComponentContextMenuEvent()
        #TmpPopupMenuEvent!.setSelectedRecord(cast(DataRow, #FilteredGridContents!.getItem(row)))
        #TmpPopupMenuEvent!.setValue(#Grid!.getCellText(row,col))
        #TmpPopupMenuEvent!.setSelectedRow(row)


        ks! = #CellContextMenuList!.keySet()
        it! = ks!.iterator()

        foundone=0

        while it!.hasNext()
            id=it!.next()
            item! = #CellContextMenuList!.get(id)

            if item!.getColumn() = col$ then
                foundone=1
                menuItem!=menu!.addMenuItem(1000+id,item!.getCaption())
                menuItem!.setCallback(menuItem!.ON_POPUP_ITEM_SELECT,#this!,"onContextMenuItemSelect")

                if item!.getImage() <>null() then
                    menuItem!.setImage(item!.getImage())
                fi
            fi
        wend

        if foundone=0 then
            sep=1
        else
            sep=0
        fi


        ks! = #RowContextMenuList!.keySet()

        it! = ks!.iterator()

        while it!.hasNext()
            id=it!.next()
            item! = #RowContextMenuList!.get(id)

            if item!.getRow() = row or item!.getRow() = -1 then
                if sep=0 and foundone=1 then
                    sep=1
                    menu!.addSeparator()
                fi

                foundone=1
                menuItem!=menu!.addMenuItem(2000+id,item!.getCaption())
                menuItem!.setCallback(menuItem!.ON_POPUP_ITEM_SELECT,#this!,"onContextMenuItemSelect")

                if item!.getImage() <>null() then
                    menuItem!.setImage(item!.getImage())
                fi
            fi
        wend

    methodend


    method public void onContextMenuItemSelect(BBjPopupSelectEvent ev!)

        declare auto    NavigationGridComponentContextMenuItem item!

        id=ev!.getMenuItem().getID()*-1

        if id>2000 then
            id=id-2000
            item! = #RowContextMenuList!.get(id)
            #TmpPopupMenuEvent!.setMenuID(item!.getID())
            #super!.invokeCallback(item!.getTargetObject(),item!.getTargetMethod(), #TmpPopupMenuEvent!)
        fi

        if id>1000 then
            id=id-1000
            item! = #CellContextMenuList!.get(id)
            #TmpPopupMenuEvent!.setMenuID(item!.getID())
            #super!.invokeCallback(item!.getTargetObject(),item!.getTargetMethod(), #TmpPopupMenuEvent!)
        fi

    methodend


    method public void setSize(BBjNumber width, BBjNumber height)

        #super!.setSize(width,height)

        #setGridPosition()
        #InfoText!.setLocation(#Grid!.getWidth()-#InfoText!.getWidth()-4,#super!.getH()-30)

    methodend


    method public void refresh(BBjNumber resetFilter)

        if resetFilter <> 0 then
            #initVariables()

            if #FilterGrid! <> null() then
                #FilterGrid!.destroy()
                #FilterGrid! = null()
                #this!.setGridPosition()
                #applyFilter()
                #TbFilter!.setSelected(0)
            fi

            #FilterStrings!.clear()
            #FilterByDistinct!.clear()
            #ColumnConfig!.clear()
        fi

        if #InitGrid then
            #VisibleRows=int( #Grid!.getHeight()/#this!.getGridRowHeight() -2)
            #Grid!.setNumRows(#VisibleRows)
        fi

        #getBC().prepareResultSet(0, #VisibleRows+2)

        s=#getBC().size()
        rows=#Grid!.getVisibleRowCount()

REM         if s>rows then
            #ScrollBar!.setVisible(1)
            #ScrollBar!.setScrollRange(1,max(1,s-rows+1))
            #ScrollBar!.setScrollProp(rows)
            #ScrollBar!.setScrollPosition(1)

REM         else
REM             #ScrollBar!.setVisible(1)
REM         fi

        #GridContents! = #getBC().getResultSet()


        if #GridContents!.size() = 0 then
            #getBC().deselectAll()
            #Grid!.setNumRows(0)

            methodret
        fi

        #GridAttributes! = cast(DataRow,#getBC().getColumnAttributes())

        #pullRowsToGrid(0)

        #onSelectionChange()

    methodend


    method private void pullRowsToGrid(BBjNumber startRow)

        #Grid!.deselectAllCells()

        rem ----------start column config---------------------------

        if #PresetConfig$>"" and #ColumnConfig!.size()=0 then
            c! = new ConfigBucket(#ConfigBucketRealm$+"_Config","",#PresetConfig$)
            c!.loadBucket(err=*next)
            #ColumnConfig! = cast(BBjVector,c!.getBBjVector(err=*next))

            if #ColumnConfig!.size()=0 then
                a=msgbox(#super!.getTranslator().getTranslation("CANNOT_LOAD_PRESET")+" "+#PresetConfig$,BBjAPI().getConstants().MB_ICONEXCLAMATION,#super!.getTranslator().getTranslation("ERROR"))
            fi
        fi

        rem no column config loaded from preset, so we're creating a default one

        if #ColumnConfig!.size()=0 then
            if #GridAttributes! = null() then
                #GridAttributes! = cast(DataRow,#getBC().getColumnAttributes())
            fi

            fields! = #GridAttributes!.getFieldNames()

            if fields!.size()=0 then
                throw "no columns",250

                methodret
            fi

            for i=0 to fields!.size()-1
                f$=fields!.getItem(i)

                if f$="{ROW_HEADER}" then
                    continue
                fi

                declare BBjTemplatedString columnConfig!
                columnConfig! = BBjAPI().makeTemplatedString(#ColumnConfigTpl$)
                columnConfig!.setFieldValue("NAME",f$)

                desc$=#GridAttributes!.getFieldAttribute(f$,"LABEL")

                if desc$="" then
                    desc$=f$
                fi

                columnConfig!.setFieldValue("DESC",desc$)

                visible=1

                if cvs(#GridAttributes!.getFieldAttribute(f$,"VISIBLE"),3) > "" then
                    visible=num(#GridAttributes!.getFieldAttribute(f$,"VISIBLE"),err=*next)
                endif

                columnConfig!.setFieldValue("VISIBLE",visible)

                width=0
                width=num(#GridAttributes!.getFieldAttribute(f$,"WIDTH"),err=*next)

                if width=0 then
                    width=100
                fi

                columnConfig!.setFieldValue("WIDTH",width)

                ctrl$=#GridAttributes!.getFieldAttribute(f$,"CONTROL")
                columnConfig!.setFieldValue("CONTROL",ctrl$)

                m$=#GridAttributes!.getFieldAttribute(f$,"MASK")
                columnConfig!.setFieldValue("MASK",m$)

                #ColumnConfig!.addItem(columnConfig!)
            next i
        fi

        if #ColumnConfig!.size() = 0 then
            #Grid!.setNumColumns(0)

            methodret
        else
            declare auto BBjTemplatedString columnConfig!

            for i=0 to #ColumnConfig!.size()-1
                columnConfig! = #ColumnConfig!.getItem(i)

                if columnConfig!.getFieldAsNumber("VISIBLE")=1 then
                    fieldcount=fieldcount+1
                fi
            next
        fi

        rem   ----end column config -------------

        HeaderString$=#GridAttributes!.getFieldAsString("{ROW_HEADER}",err=*next)


        if #InitGrid then
            #InitGrid=0

            #Grid!.setNumColumns(0)
            #Grid!.setNumColumns(fieldcount)

            font! = #Grid!.getFont()
            font! = BBjAPI().getSysGui().makeFont(font!.getName(), 10, font!.getStyle())
            #Grid!.setFont(font!)

            if #MultipleSelection then
                #Grid!.setHasRowHeader(1)
                #Grid!.setRowHeaderWidth(25)
                #Grid!.setRowHeaderStyle(#Grid!.GRID_STYLE_UNCHECKED)
            fi

            if HeaderString$>"" then
                #Grid!.setHasRowHeader(1)

                if #MultipleSelection = 0 then
                    #Grid!.setRowHeaderStyle(#Grid!.GRID_STYLE_TEXT)
                fi

                width=num(#GridAttributes!.getFieldAttribute("{ROW_HEADER}","WIDTH",err=*next),err=*next)

                if width=0 then
                    width=180
                fi


                #Grid!.setRowHeaderWidth(width)
                #Grid!.setRowHeaderAlignment(#Grid!.GRID_ALIGN_LEFT)

                ALIGN$=#GridAttributes!.getFieldAttribute("{ROW_HEADER}","ALIGN",err=*next)

                if ALIGN$="RIGHT" then
                    #Grid!.setRowHeaderAlignment(#Grid!.GRID_ALIGN_RIGHT)
                else
                    if ALIGN$="CENTER" then
                        #Grid!.setRowHeaderAlignment(#Grid!.GRID_ALIGN_CENTER)
                    fi
                fi


                bgcol$=#GridAttributes!.getFieldAttribute("{ROW_HEADER}","BGCOLOR",err=*next)

                if bgcol$>"" then
                    col!= BBjAPI().makeColor(asc(bgcol$(1,1)),asc(bgcol$(2,1)),asc(bgcol$(3,1)))
                    #Grid!.setRowHeaderBackColor(col!)
                fi

                fgcol$=#GridAttributes!.getFieldAttribute("{ROW_HEADER}","FGCOLOR",err=*next)

                if fgcol$>"" then
                    col!= BBjAPI().makeColor(asc(fgcol$(1,1)),asc(fgcol$(2,1)),asc(fgcol$(3,1)))
                    #Grid!.setRowHeaderForeColor(col!)
                fi
            fi


            #ColumnNames! = new BBjVector()
            columnHeaderText! = new BBjVector()

            i=0

            for col=0 to #ColumnConfig!.size()-1
                columnConfig! = #ColumnConfig!.getItem(col)

                if columnConfig!.getFieldAsNumber("VISIBLE")=0 then
                    continue
                fi

                f$=columnConfig!.getFieldAsString("NAME")
                columnHeaderText!.addItem(str(columnConfig!.getFieldAsString("DESC")))

                #ColumnNames!.addItem(f$)

                #Grid!.setColumnAlignment(i,#Grid!.GRID_ALIGN_LEFT)
                #Grid!.setColumnWidth(i,columnConfig!.getFieldAsNumber("WIDTH"))

                ctrl$=columnConfig!.getFieldAsString("CONTROL")
                style=0

                if ctrl$="INPUTE" then
                    style=BBjGrid.GRID_STYLE_INPUTE
                fi

                if ctrl$="INPUTD" then
                    style=BBjGrid.GRID_STYLE_INPUTD
                fi

                if ctrl$="INPUTN" then
                    style=BBjGrid.GRID_STYLE_INPUTN
                fi

                if ctrl$="HTML" then
                    style=BBjGrid.GRID_STYLE_TEXT
                fi

                if style then
                    #Grid!.setColumnStyle(i,style)
                fi

                m$=columnConfig!.getFieldAsString("MASK")
                #Grid!.setColumnMask(i,m$)

                attrs! = #GridAttributes!.getFieldAttributes(f$)

                ks! = attrs!.keySet()
                it! = ks!.iterator()

                while it!.hasNext()
                    k$=it!.next()

                    if k$="BGCOLOR" then
                        bgcol$=attrs!.get(k$)

                        if bgcol$>"" then
                            col!= BBjAPI().makeColor(asc(bgcol$(1,1)),asc(bgcol$(2,1)),asc(bgcol$(3,1)))
                            #Grid!.setColumnBackColor(i,col!)
                        fi
                    fi

                    if k$="FGCOLOR" then
                        fgcol$=attrs!.get(k$)

                        if fgcol$>"" then
                            col!= BBjAPI().makeColor(asc(fgcol$(1,1)),asc(fgcol$(2,1)),asc(fgcol$(3,1)))
                            #Grid!.setColumnForeColor(i,col!)
                        fi
                    fi

                    if k$="FONTSTYLE" then
                        style$=attrs!.get(k$)

                        if style$>"" then
                            declare BBjFont font!
                            font! = #Grid!.getColumnFont(i)
                            style=0

                            if pos("BOLD"=style$)>0         then let style=style+1

                            if pos("ITALIC"=style$)>0       then let style=style+2

                            if pos("UNDERLINE"=style$)>0    then let style=style+16
                            newfont! = BBjAPI().getSysGui().makeFont(font!.getName(), font!.getSize(), style)
                            #Grid!.setColumnFont(i,newfont!)
                        fi
                    fi


                    if k$="TOOLTIP" then
                        m$=attrs!.get(k$)
                        #Grid!.setToolTipText(i,m$)
                    fi

                    if k$="ALIGN" then
                        align$=attrs!.get(k$)

                        if align$="LEFT" then
                            align=BBjGrid.GRID_ALIGN_LEFT
                        fi

                        if align$="RIGHT" then
                            align=BBjGrid.GRID_ALIGN_RIGHT
                        fi

                        if align$="CENTER" then
                            align=BBjGrid.GRID_ALIGN_CENTER
                        fi

                        #Grid!.setColumnAlignment(i,align)
                    fi
                wend

                i=i+1
            next col


            #Grid!.setColumnHeaderText(columnHeaderText!)
            #Grid!.setHasColumnHeader(1)

            #adjustFilterGrid()
            ? "#super!.getBC().getAllowFilter()=",#super!.getBC().getAllowFilter()

            if #super!.getBC().getAllowFilter() and #TbFilter! <> null() then
                #TbFilter!.setEnabled(1)

                if #TbFilterGeo!<>null() then
                    rem #TbFilterGeo!.setEnabled(1)
                fi
            fi
        fi


        v!=new BBjVector()
        r!=new BBjVector()
        rec_count=0

        i=max(0,startRow)

        #FirstRecordInGrid = startRow

        endRow=startRow+#VisibleRows-1
        row=0

        #Grid!.setNumRows(#VisibleRows-1)

        loop:

        rec!=#GridContents!.getItem(i)

        rem -------------------------------------------------------------------------------------------------

        j=0

        for col=0 to #ColumnConfig!.size()-1
            columnConfig! = #ColumnConfig!.getItem(col)

            if columnConfig!.getFieldAsNumber("VISIBLE")=0 then
                continue
            fi

            f$=columnConfig!.getFieldAsString("NAME")

            attrs! = rec!.getFieldAttributes(f$)

            ks! = attrs!.keySet()
            it! = ks!.iterator()

            cellmask$=""
            celltype$=""
            related$=""

            while it!.hasNext()
                k$=it!.next()

                if k$="BGCOLOR" then
                    bgcol$=attrs!.get(k$)

                    if bgcol$>"" then
                        col!= BBjAPI().makeColor(asc(bgcol$(1,1)),asc(bgcol$(2,1)),asc(bgcol$(3,1)))
                        #Grid!.setCellBackColor(row,j,col!)
                    fi
                fi

                if k$="FGCOLOR" then
                    fgcol$=attrs!.get(k$)

                    if fgcol$>"" then
                        col!= BBjAPI().makeColor(asc(fgcol$(1,1)),asc(fgcol$(2,1)),asc(fgcol$(3,1)))
                        #Grid!.setCellForeColor(row,j,col!)
                    fi
                fi

                if k$="FONTSTYLE" then
                    style$=attrs!.get(k$)

                    if style$>"" then
                        declare BBjFont font!
                        font! = #Grid!.getCellFont(row,j)
                        style=0

                        if pos("BOLD"=style$)>0         then let style=style+1

                        if pos("ITALIC"=style$)>0       then let style=style+2

                        if pos("UNDERLINE"=style$)>0    then let style=style+16
                        newfont! = BBjAPI().getSysGui().makeFont(font!.getName(), font!.getSize(), style)
                        #Grid!.setCellFont(row,j,newfont!)
                    fi
                fi

                img! = null()

                if k$="IMAGEFILE" then
                    img! = BBjAPI().getSysGui().getImageManager().loadImageFromFile(attrs!.get(k$),err=*next)
                fi

                if k$="IMAGEBYTES" then
                    img! = BBjAPI().getSysGui().getImageManager().loadImageFromBytes(attrs!.get(k$),err=*next)
                fi

                if img! <>null() then
                    #Grid!.setCellImage(row,j,img!)
                fi


                if k$="CONTROL" then
                    ctrl$=attrs!.get(k$)
                    found=0

                    if ctrl$="INPUTE" then
                        style=BBjGrid.GRID_STYLE_INPUTE
                    fi

                    if ctrl$="INPUTD" then
                        style=BBjGrid.GRID_STYLE_INPUTD
                    fi

                    if ctrl$="INPUTN" then
                        style=BBjGrid.GRID_STYLE_INPUTN
                    fi

                    if ctrl$="HTML" then
                        style=BBjGrid.GRID_STYLE_TEXT
                    fi

                    if style then
                        #Grid!.setCellStyle(row,j,style)
                        celltype$=ctrl$
                    fi
                fi

                if k$="MASK" then
                    m$=attrs!.get(k$)
                    #Grid!.setCellMask(row,j,m$)
                    cellmask$=m$
                fi

                if k$="TOOLTIP" then
                    m$=attrs!.get(k$)
                    #Grid!.setToolTipText(row,j,m$)
                fi

                if k$="RELATED" then
                    related$=attrs!.get(k$)
                fi

                if k$="ALIGN" then
                    align$=attrs!.get(k$)

                    if align$="LEFT" then
                        align=BBjGrid.GRID_ALIGN_LEFT
                    fi

                    if align$="RIGHT" then
                        align=BBjGrid.GRID_ALIGN_RIGHT
                    fi

                    if align$="CENTER" then
                        align=BBjGrid.GRID_ALIGN_CENTER
                    fi

                    #Grid!.setCellAlignment(row,j,align)
                fi
            wend

            f1$=str(rec!.getFieldAsString(f$))

            if celltype$="INPUTD" then
                f=num(f1$)

                if f=-1 then
                    f1$=""
                fi

                if cellmask$="" then
                    f1$=date(f)
                else
                    f1$=date(f:cellmask$)
                fi

                if related$="" then
                    related$=date(f:"%Yl%Mz%Dz")
                fi
            fi


            v!.addItem(f1$)
            r!.addItem(related$)

            j=j+1
        next


        bgcol$=""
        bgcol$=rec!.getFieldAttribute("{ROW_HEADER}","ROWCOLOR",err=*next)

        if bgcol$>"" then
            col!= BBjAPI().makeColor(asc(bgcol$(1,1)),asc(bgcol$(2,1)),asc(bgcol$(3,1)))
            #Grid!.setRowBackColor(rec_count,col!)
        fi


        if HeaderString$>"" then
            bgcol$=rec!.getFieldAttribute("{ROW_HEADER}","BGCOLOR")

            if bgcol$>"" then
                col!= BBjAPI().makeColor(asc(bgcol$(1,1)),asc(bgcol$(2,1)),asc(bgcol$(3,1)))
                #Grid!.setRowHeaderCellBackColor(row,col!)
            fi

            fgcol$=rec!.getFieldAttribute("{ROW_HEADER}","FGCOLOR")

            if fgcol$>"" then
                col!= BBjAPI().makeColor(asc(fgcol$(1,1)),asc(fgcol$(2,1)),asc(fgcol$(3,1)))
                #Grid!.setRowHeaderCellForeColor(row,col!)
            fi

            Header$ = rec!.replaceFields(HeaderString$)

            pre$=""
            pre$=rec!.getFieldAsString("{ROW_HEADER}",err=*next)
            Header$=pre$+" "+Header$
            p=pos("#"=Header$)

            if p>0 then
                Header$=Header$(1,p-1)+str(rec_count+startRow)+Header$(p+1)
            fi

            #Grid!.setRowHeaderCellText(row,Header$)
        fi

        if #MultipleSelection then
            found=0
            j=0

            while j< #SelectedRows!.size()
                if rec!.equals(#SelectedRows!.getItem(j)) then
                    found=1
                    break
                fi

                j=j+1
            wend

            if found then
                #Grid!.setRowHeaderCellStyle(rec_count,#Grid!.GRID_STYLE_CHECKED)
            else
                #Grid!.setRowHeaderCellStyle(rec_count,#Grid!.GRID_STYLE_UNCHECKED)
            fi
        fi

        rem --------------------------------------------------

        rec_count=rec_count+1

        loop_continue:
        i=i+1
        row=row+1

        if i<=endRow and i<#getBC().getResultSet().size() then goto loop

        #Grid!.setNumRows(rec_count)
        #LastRecordInGrid = #FirstRecordInGrid + rec_count

        #Grid!.setCellText(0,0,v!)
        #Grid!.setCellRelated(0,0,r!)


        v!=#getBC().getSelection()
        v_view! = new BBjVector()
        i=0

        while i<v!.size()
            s=v!.getItem(i) -startRow

            if s>=0 and s<rec_count then
                v_view!.addItem(s)
            fi

            i=i+1
        wend

        if v_view!.size() then
            #Grid!.setSelectedRows(v_view!)
        else
            #Grid!.deselectAllCells()
        fi

        i$="("
        i$=i$+str(#FirstRecordInGrid)
        i$=i$+"-"
        i$=i$+str(#LastRecordInGrid)
        i$=i$+") / "
        i$=i$+str(#getBC().size())
        #InfoText!.setText(i$)

        #ScrollBar!.setScrollPosition(#FirstRecordInGrid)

    methodend


    method public void onSelectionChange()

        v!=#getBC().getSelection()

        if v! <> null() and v!.size() then
            p=v!.getItem(0)
            plus = #Grid!.getVisibleRowCount()
            #getBC().prepareResultSet(max(0,p-plus-2), p+plus+2)

            if p<#FirstRecordInGrid or p>=#LastRecordInGrid then
                #pullRowsToGrid(p)
            else
                v!=#getBC().getSelection()
                v_view! = new BBjVector()
                i=0

                while i<v!.size()
                    s=v!.getItem(i) - #FirstRecordInGrid

                    if s>=0 and s<#LastRecordInGrid-#FirstRecordInGrid then
                        v_view!.addItem(s)
                    fi

                    i=i+1
                wend

                if v_view!.size() then
                    #Grid!.setSelectedRows(v_view!)
                fi
            fi
        else
            #Grid!.deselectAllCells()
        fi

    methodend


    method private void setGridPosition()

        if #ToolBar! <> null() then
            h=25
        fi

        if #FilterGrid! <> null() then
            h=h+27
        fi

        h=h
        #Grid!.setLocation(0,h)
        #Grid!.setSize(#super!.getW()-15, #super!.getH()-h-40)
        #InfoText!.setLocation(#Grid!.getWidth()-#InfoText!.getWidth()-4,#super!.getH()-30)

        #ScrollBar!.setLocation(#super!.getW()-15,h)
        #ScrollBar!.setSize(15,#Grid!.getHeight())


        if #FilterGrid! <> null() then
            if #Grid!.getHasRowHeader() then
                rhw = #Grid!.getRowHeaderWidth()
            fi

            #FilterGrid!.setSize(#super!.getW()-rhw, #FilterGrid!.getHeight())
        fi

    methodend


    method public void setShowToolbar(BBjNumber f_show)

        if #ToolBar! <> null() and f_show =0 then
            #ToolBar!.destroy()
            #ToolBar! = null()
            #setGridPosition()
            #ProgressBar!=null()
        fi

        if #ToolBar! = null() and f_show then
            #ToolBar! = #getWnd().addChildWindow(110,0,0,#getW(),25,"",$00000800$,BBjAPI().getSysGui().getAvailableContext())
            #getLaf().prepareWindow(#ToolBar!)
            #getLaf().setStyle(#ToolBar!, "ToolBarLike")
            #setGridPosition()

            myImageManager! = BBjAPI().getSysGui().getImageManager()

            offs=0

            if #ShowTbFilter then
                #TbFilter! = #ToolBar!.addToolButton(100,offs,1,22,22,"")
                imgFilter! = myImageManager!.loadImageFromBytes($89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF61000001A04944415478DA63601870D0DADAFA9F149C909808C237E29393BDC106545656FE7FF3E6CDFF1F3F7E80F1C78F1FC1FC274F9EFCBF72E5CAFF6BD7AEFDBF75EBD6FF070F1EFC07A985590C3204CCC8CACAFABF74E952B0A2BB77EFFEDFBD7BF7FF850B17FEAFADADFDAFA3A3F3DFD4D4F4BF8F8FCFFFB4B4B4FF20B51806C4C4C4FC270543BDF0303E29C90F6CC0AA55AB9881122F4A4A4AFEBF7EFD1AEC92D3A74FFF5FB361EFFFFAEEF5FF77EF3DF6BFA8A8E87F7878F88B84A4A423898989F618013969D22451A0822F656565FF3F7FFEFC7FCDDAF5FF4B6AA6FC2F6F5DF71F64707070F097F9F3E74BE08D8D3973E6E8040404FC696C6CFC7FF3D6C3FF53E7EFFE9F9C51F2DFCBCBEBCFE2C58BF5898A52A02D41400DFF67CF9EFB3F23ABE0BF9B9BDBFF79F3E68590942E56AE5C59595151F1DFCFCFEFFFC68D1B6BC84A5C717171B3D5D5D537919D3A8181365D5555750BD906D8D8D82C949797DF4BB6015A5A5A31E2E2E2670C5D5DA5CC9D3DB54CDDDDB54D3C3CD48D5D7CE58C5D5CF8893244455B678D998B67AE89AB47A4A9B387A9B193A73248B3B1B1312BB23A002745083F1F756D9E0000000049454E44AE426082$)
                #TbFilter!.setImage(imgFilter!)
                #TbFilter!.setToolTipText(#super!.getTranslator().getTranslation("FILTER"))
                #TbFilter!.setNoEdge(0)
                #TbFilter!.setTabTraversable(0)
                #TbFilter!.setCallback(BBjAPI.ON_TOOL_BUTTON_PUSH,#this!,"toggleFilter")
                #TbFilter!.setToggleable(1)
                #TbFilter!.setEnabled(0)
                #TbFilter!.setOpaque(0)
                offs=offs+27

                if #getBC()<> null() and 0 then
                    #TbFilterGeo! = #ToolBar!.addToolButton(101,offs,1,22,22,"")
                    imgFilterGeo! = myImageManager!.loadImageFromBytes
                    #TbFilterGeo!.setImage(imgFilterGeo!)
                    #TbFilterGeo!.setToolTipText(#super!.getTranslator().getTranslation("GEO_SEARCH"))
                    #TbFilterGeo!.setNoEdge(0)
                    #TbFilterGeo!.setTabTraversable(0)
                    #TbFilterGeo!.setCallback(BBjAPI.ON_TOOL_BUTTON_PUSH,#this!,"toggleFilterGeo")
                    #TbFilterGeo!.setToggleable(1)
                    #TbFilterGeo!.setEnabled(0)
                    #TbFilterGeo!.setOpaque(0)
                    offs=offs+22
                fi

                offs=offs+5

                if #ConfigBucketRealm$>"" then
                    #LedFilterSave! = #ToolBar!.addListEdit(201,offs,1,120,220,"")
                    #LedFilterSave!.setTabTraversable(0)
                    #fillLedFilterSave()
                    #LedFilterSave!.setCallback(#LedFilterSave!.ON_EDIT_MODIFY,#this!,"onLedFilterSaveEditModify")

                    offs=offs+125

                    #TbFilterSave! = #ToolBar!.addToolButton(202,offs,1,22,22,"")
                    imgTbFilterSave! = myImageManager!.loadImageFromBytes($89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF61000002264944415478DACD90DF6B92511CC6F76704D165128BB17EED65F39DBA74395FB237F475A1934408EF44229204B11F579150D04D5276918370ACACB5D25CCED9962DA88B0641E9566DD3AD0DC5B45126337CF29CF16E8863DD76E08103E7793EDFE77C5B5AFE8BB3775F2BDADA0F40D2BAFF76FDBEA3888778496613D07EF0105C2E179EC45F6F683C899158128F63AF101A9BC283E824869F27100CC761B7DBA997641A006EB71B37EF0D819C5AAD86F5F52ACAE5DFC87D2F22BB5AC0E7EC0AD2F34B6059161CC76D0F387FF91A0554AB55542A152CAFE69148BEC1445DE1F197083D8D422291D006668BB51970DD7F9F0272F9421DF20785D21AD20B4BF8F825830FB30B789FFA0A93C90487C381933AA11970EED25594D67EE1453C81B18949CC7C9AC5B3D8C6E4E1D108864622502814309BCDE851AA9A010ED745D4EA0DF2A59FF856F8814CAE8895621973CB79A4B239DC1D0C42A95442A3D1E07007D30C90C96460180656AB15168B0546A3113A9D8E2E8D04A55229955C2EDF7E8964394EA793FED166B3D1AA7ABD9E4E2400122443C8BDA1C169EB19040201F0FA7EB431DD3BAAB35B01B55A8D2E56B605E8370EC0E7F351C3D95B8F70C13F8A2B8351DC7898803F328DD0D40CDEA533906B05EAE179BE71897DDC7178BD5EFA48822AEE0495187C9B5AC49DF0347AF853D42308028EAA7AB70047984E783C1EFA48268A003148A0A4990830180C50F6AA3701DA5DBBF7048DA6817FFE5F94EA581F3ABA5802D0FE05B978CE17ACA564FC0000000049454E44AE426082$)
                    #TbFilterSave!.setImage(imgTbFilterSave!)
                    #TbFilterSave!.setTabTraversable(0)
                    #TbFilterSave!.setCallback(BBjAPI.ON_TOOL_BUTTON_PUSH,#this!,"onTbFilterSaveBtnPush")
                    #TbFilterSave!.setEnabled(0)
                    #TbFilterSave!.setOpaque(0)
                    offs=offs+22

                    #TbFilterDel! = #ToolBar!.addToolButton(203,offs,1,22,22,"")
                    imgTbFilterDel! = myImageManager!.loadImageFromBytes($89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF610000024C4944415478DADD52DD4B9A511C7E4314228A4A0C02090AFA009392220A05234ACA3E28687D504110041514D335A15DE4580B620C0632B6DAEBA53713166C835D6875E1C672D88750A86F9BE9F6CE77AFBE8E8475E1263D3BC66E34EA0FD8811F87C339CFF37BCEF37B28EAFF5CB7294A49CA4E8A25857F7BFAACBC1168A6288981A2EEDD97C97E7B2726706632E1626909427F3FDC7575B82B1627D3F7B7284A745D67CBABC646706B6B381C1CC4CF8505FC999D05AFD7E35369295EE7E4E0A944823B2291E50AD848519A47858588ACAEC2B7BC8CF8D1111C151570E5E7E35D5E1EBE6C6EC2D5DB8B2D42F0A4A000A6DC5C4D76779B87483D209D059F0F8944023F3C9E4BE9DF1D0EC462317CDBDB83ABA8085B6565782095DAB209587E6E0EECD4143E34358173BB210802E2F138789E074714315A2DA22A15A2CDCD782C97B3D904C9CFADAD085455E1582EC7B15A0D81E3C030CC25C1C9E424626D6DC0C000529D9D785E5D9DCC20581489D8F752290E4A4A70585383C8EE2E2291083842120E8711F67A11181A82D0DD8D5F84E4855299A960512CB6BD2560373132BCBD0D96651126DF60C6C670BAB383502884D3FD7DF8753AF8FBFA40AB54991EA45D7D269321585909863C0812E3023D3D88933CF8474610743A71623643181FC71B42626D68D05C19E5C3E2E275A742019E98146A69C1D9F030603020313F8FAFD3D38812933F8E8EC2AAD5AE5F9B444B79F90A5D5B9BF27575E19C187741C2746E34C23733035AAF4FD1EDED2B2F150AC98D91DE5028EA89443BAD567334191D0171569DCEBED1D1519FFDF62FF07554B319855BD50000000049454E44AE426082$)
                    #TbFilterDel!.setImage(imgTbFilterDel!)
                    #TbFilterDel!.setTabTraversable(0)
                    #TbFilterDel!.setCallback(BBjAPI.ON_TOOL_BUTTON_PUSH,#this!,"onTbFilterDelBtnPush")
                    #TbFilterDel!.setEnabled(0)
                    #TbFilterDel!.setOpaque(0)
                    offs=offs+22

                    offs=offs+10
                fi
            fi


            offs=offs+5

            if #ShowTbConfig then
                #TbConfig! = #ToolBar!.addToolButton(103,offs,1,22,22,"")
                imgConfig! = myImageManager!.loadImageFromBytes($89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF61000002194944415478DA85D2DF6B92511807F05D4451A3DFACA2FFA28B5D7793E04832E5D08A39375B0A65EAEBEFDFB236679875D120B47062B852D69C1198135CEB4226B20BE125E846542224621723BA516ADFDE13ECB0C04307DE8BF7E1FB7C1ECEC3191AFACFA9ACAFCBB3D9ECD6A368B4175958D89A9F9D9573C3F9D555984C26ECFFA7D3E9ABAD560BF4ACE5F3080602DF3D1ECF3817E8F7FB48A5520C0887C3226D5ECE64E076BBD7247C84D60D06C3C98140AD564328146280DFE7EB51C02A08AC66359B555AADF6EB4020B5B4843B33332C2C582C62A552413C1EC76D9D0E7ABD1EF37373208488038162B1089BCDC600A9E1DAC34804E57219CD6613A552098140000A85820C04DEACACE0BED1888335E9DE258D4603A55209B55AFD4D2E97ABB84B7C914840373DFD0F4077128BC590CBE5100C06C16D7EF7EAF18651790116D53938C9D98D83404282EBF53AFC7E3F1FC82C5AB1B7F71B1F9E11786F9C66413A9502ED761B3E9F8F0F98AF9FC76EF733AACF0942374FB0205D5AA3D140AFD783F488F8804D3D829DCE363E2D1384278659904EAD56ABE876BB70B95C7CC045CE60F7CB36BA6F09A2934759D0EBF5A25028401445389D4E3EE01F3F851F9D4DFCDC9CC493A9C32C283D612493C9BF4B74381C7CE0C1ADE3D8794FF0ABF51A8BBA432C48A7D207D4E97460B7DBF94064E25829A63D82A75273746A581CBD32A61F958D5D1604E1256DA49FFEEEBD8FB4764926BBB8DFF707320D3D972CE027660000000049454E44AE426082$)
                #TbConfig!.setImage(imgConfig!)
                #TbConfig!.setTabTraversable(0)
                #TbConfig!.setCallback(BBjAPI.ON_TOOL_BUTTON_PUSH,#this!,"doConfig")
                #TbConfig!.setOpaque(0)
                offs=offs+22

                offs=offs+5

                if #ConfigBucketRealm$>"" then
                    #LedConfigSave! = #ToolBar!.addListEdit(301,offs,1,120,220,"")
                    #LedConfigSave!.setTabTraversable(0)
                    #fillLedConfigSave()
                    #LedConfigSave!.setCallback(#LedConfigSave!.ON_EDIT_MODIFY,#this!,"onLedConfigSaveEditModify")

                    offs=offs+125

                    #TbConfigSave! = #ToolBar!.addToolButton(302,offs,1,22,22,"")
                    imgTbFilterSave! = myImageManager!.loadImageFromBytes($89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF61000002264944415478DACD90DF6B92511CC6F76704D165128BB17EED65F39DBA74395FB237F475A1934408EF44229204B11F579150D04D5276918370ACACB5D25CCED9962DA88B0641E9566DD3AD0DC5B45126337CF29CF16E8863DD76E08103E7793EDFE77C5B5AFE8BB3775F2BDADA0F40D2BAFF76FDBEA3888778496613D07EF0105C2E179EC45F6F683C899158128F63AF101A9BC283E824869F27100CC761B7DBA997641A006EB71B37EF0D819C5AAD86F5F52ACAE5DFC87D2F22BB5AC0E7EC0AD2F34B6059161CC76D0F387FF91A0554AB55542A152CAFE69148BEC1445DE1F197083D8D422291D006668BB51970DD7F9F0272F9421DF20785D21AD20B4BF8F825830FB30B789FFA0A93C90487C381933AA11970EED25594D67EE1453C81B18949CC7C9AC5B3D8C6E4E1D108864622502814309BCDE851AA9A010ED745D4EA0DF2A59FF856F8814CAE8895621973CB79A4B239DC1D0C42A95442A3D1E07007D30C90C96460180656AB15168B0546A3113A9D8E2E8D04A55229955C2EDF7E8964394EA793FED166B3D1AA7ABD9E4E2400122443C8BDA1C169EB19040201F0FA7EB431DD3BAAB35B01B55A8D2E56B605E8370EC0E7F351C3D95B8F70C13F8A2B8351DC7898803F328DD0D40CDEA533906B05EAE179BE71897DDC7178BD5EFA48822AEE0495187C9B5AC49DF0347AF853D42308028EAA7AB70047984E783C1EFA48268A003148A0A4990830180C50F6AA3701DA5DBBF7048DA6817FFE5F94EA581F3ABA5802D0FE05B978CE17ACA564FC0000000049454E44AE426082$)
                    #TbConfigSave!.setImage(imgTbFilterSave!)
                    #TbConfigSave!.setTabTraversable(0)
                    #TbConfigSave!.setCallback(BBjAPI.ON_TOOL_BUTTON_PUSH,#this!,"onTbConfigSaveBtnPush")
                    #TbConfigSave!.setEnabled(0)
                    #TbConfigSave!.setOpaque(0)
                    offs=offs+22

                    #TbConfigDel! = #ToolBar!.addToolButton(303,offs,1,22,22,"")
                    imgTbFilterDel! = myImageManager!.loadImageFromBytes($89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF610000024C4944415478DADD52DD4B9A511C7E4314228A4A0C02090AFA009392220A05234ACA3E28687D504110041514D335A15DE4580B620C0632B6DAEBA53713166C835D6875E1C672D88750A86F9BE9F6CE77AFBE8E8475E1263D3BC66E34EA0FD8811F87C339CFF37BCEF37B28EAFF5CB7294A49CA4E8A25857F7BFAACBC1168A6288981A2EEDD97C97E7B2726706632E1626909427F3FDC7575B82B1627D3F7B7284A745D67CBABC646706B6B381C1CC4CF8505FC999D05AFD7E35369295EE7E4E0A944823B2291E50AD848519A47858588ACAEC2B7BC8CF8D1111C151570E5E7E35D5E1EBE6C6EC2D5DB8B2D42F0A4A000A6DC5C4D76779B87483D209D059F0F8944023F3C9E4BE9DF1D0EC462317CDBDB83ABA8085B6565782095DAB209587E6E0EECD4143E34358173BB210802E2F138789E074714315A2DA22A15A2CDCD782C97B3D904C9CFADAD085455E1582EC7B15A0D81E3C030CC25C1C9E424626D6DC0C000529D9D785E5D9DCC20581489D8F752290E4A4A70585383C8EE2E2291083842120E8711F67A11181A82D0DD8D5F84E4855299A960512CB6BD2560373132BCBD0D96651126DF60C6C670BAB383502884D3FD7DF8753AF8FBFA40AB54991EA45D7D269321585909863C0812E3023D3D88933CF8474610743A71623643181FC71B42626D68D05C19E5C3E2E275A742019E98146A69C1D9F030603020313F8FAFD3D38812933F8E8EC2AAD5AE5F9B444B79F90A5D5B9BF27575E19C187741C2746E34C23733035AAF4FD1EDED2B2F150AC98D91DE5028EA89443BAD567334191D0171569DCEBED1D1519FFDF62FF07554B319855BD50000000049454E44AE426082$)
                    #TbConfigDel!.setImage(imgTbFilterDel!)
                    #TbConfigDel!.setTabTraversable(0)
                    #TbConfigDel!.setCallback(BBjAPI.ON_TOOL_BUTTON_PUSH,#this!,"onTbConfigDelBtnPush")
                    #TbConfigDel!.setEnabled(0)
                    #TbConfigDel!.setOpaque(0)
                    offs=offs+22

                    if #AdminMode then
                        #TbAdminToggle! = #ToolBar!.addToolButton(304,offs,1,22,22,"")
                        imgTbAdminToggle! = myImageManager!.loadImageFromBytes($89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF61000002734944415478DA8DD06B4853611C067041CB8A89C2464DF741246D5A636A2769795DB3A51EDDCEDC3C73D39DB3915A1D2FE968595EC09D6A5636A8FC302F9394C04994462A4423E8829F4605620515D597C8E8464551D1E54907490385FDE1F9F4BEFCDEE7FF4644FC374AA5324A53AA1D6158DB6796B5FD32579A7E32DA928093560A22C29992A2D2C16A5B0D8C5516E80C34C8320D0A77A94166486F8505E829EDFCA5FE5E04AE4FC1EBEEC6E8691E636DF5C8DC98F83D2C80268BDE3EBA3185570FEEE1C58C1FF77D7DB8D6D5087982F04F58406B25F924E01BC063FF04E6C68771A7B70B578ED4225712F73B2CC0A5CDF14FF2CD98F1B870F34C27A69D4D38BFBF02A64DA20F61018E1C694F9F4D83AB9D1C2E1FAEC548A319AE830DA018DB0FBAB90D1477E8795611C5D3341DB92C604D15112D8A140CD694C363D5A09135E3F5BBF7E04E79C1F50C81E9704351664462DA96E32BB6D049D60DD76D4D42AB7A1BB8A367B19BE1B0599ED1BE789647D11524B30744FECEF9D0DFA76901CBB2A3160BF3CD7DF204AA9504086174F0C5146207BA5D2EE8F5868F56ABD5D37EAE1F6A3D8D10C06EB70FB8162E7539795C181BC7ECDC430C1D3B8016568206533CEA74EBC1140B4117C4429325805AB62614E079FE8DCFE70357DF803EEF08A6FDB731F1EC2B9A2D09B83B590EE00B3EBD74C2D32EC245B7048569D1A100499270381CA0CAF590C933D1D33B84E2BD1D68AA8A5F021444F212A094AE0E05C46231542A553069B27450D51C4C4DADC1FACB01F9C9AB560614D979200A2878669F82338A975D2137292A04902F02FF12132782205688ED663BF61936C0562A824915079D2206C5E96B83F5B313231781B285A4FE05E73F5BB725F891C10000000049454E44AE426082$)
                        #TbAdminToggle!.setImage(imgTbAdminToggle!)
                        #TbAdminToggle!.setTabTraversable(0)
                        #TbAdminToggle!.setCallback(BBjAPI.ON_TOOL_BUTTON_PUSH,#this!,"onTbAdminTogglePush")
                        #TbAdminToggle!.setToggleable(1)
                        #TbAdminToggle!.setOpaque(0)
                        offs=offs+22
                    fi

                    offs=offs+10
                fi
            fi


            offs=offs+20

            if #ShowTbExcel then
                #TbExcel! = #ToolBar!.addToolButton(141,offs,1,22,22,"")
                imgExcel! = myImageManager!.loadImageFromBytes($89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF61000001D94944415478DA9593CD4B1B5114C567E1A65468FF015D8AB81104F10312AD159346340185E842540C068BBA11291AA40951478966A1286D513183E04254F0A382061AA790684A1806826888E04212DC956E0433E1E87D6071D431E6C259BCFBCEFB71DEE53D4E10043C94CFE783C7E381C3E180DBEDFE67B7DB8DDC4B4587D2E9B44A8AA220914830A0DFEF576C369B3523E0CE8840208050288470380C511419802A180CA6EF2035AF06442211C8B2ACBA1ACFF3D719015404A08A46A348A5520C46D7A19964958000B1580CF1789CCD84069B55026173197D739DE89A6F42CF42AB4AD4AB1B2A3BCED571559A092CCE0FD8B95A818C4384943D88D75B4C077FD730FF671C63FB83A8F95292D44C60E6F5F8F4B55CA516AF41B5268F66826A473106376C98DD9EC44DEA06679727A87756E2E8F437EB75FEB0308F6682E2DE3CCC484E9827F4EC00D581B48BA6F18F68E475F8BCDAC23C9A09F2DBDFC225F6C3305A8AEE592BE6763C0CB2F26B014657195ABFD731CFB34F99F4BE9943C7520366B6267071758E615F1F83D0DEB79F5E98C6CA99877BFC99EE9553CF3D1962ED48093B2C49125B9347F38FBCB17297E6C50AB4AD19D0B161626A5F37C132ADFB0F248FF6372DE58C0503EF92FAA942547B8B54A21EED91E716173C5557780F92D50000000049454E44AE426082$)
                #TbExcel!.setImage(imgExcel!)
                #TbExcel!.setTabTraversable(0)
                #TbExcel!.setCallback(BBjAPI.ON_TOOL_BUTTON_PUSH,#this!,"doExcel")
                #TbExcel!.setOpaque(0)
                offs=offs+22
            fi


            #ProgressBar! = #ToolBar!.addProgressBar(199,offs,1,100,22,0,100)
            #ProgressBar!.setVisible(0)

            offs=offs+110

            #BtnCancelProgress! = #ToolBar!.addButton(200,offs,1,40,22,#super!.getTranslator().getTranslation("CANCEL"))
            #BtnCancelProgress!.setVisible(0)
        fi

    methodend


    method public void setShowTbFilter(BBjNumber f_show)

        #ShowTbFilter = f_show

        if #ToolBar!<>null() then
            #setShowToolbar(0)
            #setShowToolbar(1)
        fi

    methodend


    method public void setShowTbConfig(BBjNumber f_show)

        #ShowTbConfig = f_show

        if #ToolBar!<>null() then
            #setShowToolbar(0)
            #setShowToolbar(1)
        fi

    methodend


    method public void setShowTbExcel(BBjNumber f_show)

        f_show=0
        rem disable excel for not
        rem it's under construction

        #ShowTbExcel = f_show

        if #ToolBar!<>null() then
            #setShowToolbar(0)
            #setShowToolbar(1)
        fi

    methodend


    method public void setAllowFilterByDistinct(BBjNumber f_allow)

        #AllowFilterByDistinct=f_allow

        if #FilterGrid! <> null() then
            #toggleFilter(null())
        fi

    methodend


    method private void fillLedConfigSave()

        sav$=#LedConfigSave!.getEditText()
        #LedConfigSave!.removeAllItems()
        #LedConfigSave!.addItem("")

        user$=#ConfigBucketUser$

        if #fAdminToggle then
            user$=""
        fi

        #ConfigSaveConfigBuckets! = cast(BBjVector, ConfigBucket.enumConfigBuckets(#ConfigBucketRealm$+"_Config",user$))

        sav=-1

        if #ConfigSaveConfigBuckets!.size() then
            for i=0 to #ConfigSaveConfigBuckets!.size()-1
                c!=#ConfigSaveConfigBuckets!.getItem(i)
                c$=c!.getName()
                #LedConfigSave!.addItem(c$)

                if sav$=c$ then
                    sav=i
                fi
            next
        fi

        #LedConfigSave!.selectIndex(sav+1)

    methodend


    method public void onLedConfigSaveEditModify(BBjEditModifyEvent ev!)

        sav$=#LedConfigSave!.getEditText()

        if sav$="" then
            #ColumnConfig!.clear()
            #InitGrid=1
            #pullRowsToGrid(0)
            #enableConfigSaveButtons()

            methodret
        fi

        #enableConfigSaveButtons()


        if #ConfigSaveConfigBuckets!.size() and sav$>"" then
            for i=0 to #ConfigSaveConfigBuckets!.size()-1
                c!=#ConfigSaveConfigBuckets!.getItem(i)
                c$=c!.getName()

                if sav$=c$ then
                    config! = c!
                    break
                fi
            next
        fi


        if config! <> null() then
            seterr errtrap
            config!.loadBucket()

            #ColumnConfig! = cast(BBjVector, config!.getBBjVector())
            #InitGrid=1
            #pullRowsToGrid(0)
            #enableConfigSaveButtons()
        fi

        methodret

        errtrap:
        a=msgbox(errmes(-1),BBjAPI().getConstants().MB_ICONEXCLAMATION,#super!.getTranslator().getTranslation("CANNOT_LOAD"))

    methodend


    method private void enableConfigSaveButtons()

        if #LedConfigSave!<>null() and #TbConfigSave!<>null() and #TbConfigDel! <> null() then
            fenable1 = #LedConfigSave!.getText() > ""

            fenable3 = 0
            sav$=#LedConfigSave!.getText()

            if #ConfigSaveConfigBuckets!.size() then
                for i=0 to #ConfigSaveConfigBuckets!.size()-1
                    c!=#ConfigSaveConfigBuckets!.getItem(i)
                    c$=c!.getName()

                    if sav$=c$ then
                        fenable3 = 1
                        break
                    fi
                next
            fi

            #TbConfigSave!.setEnabled(fenable1)
            #TbConfigDel!.setEnabled(fenable1 AND fenable3)
        fi

    methodend


    method public void onTbConfigSaveBtnPush(BBjToolButtonPushEvent ev!)

        user$=#ConfigBucketUser$

        if #fAdminToggle then
            user$=""
        fi

        c! = new ConfigBucket(#ConfigBucketRealm$+"_Config",user$,#LedConfigSave!.getEditText())
        c!.put(#ColumnConfig!,err=errtrap1)
        c!.saveBucket()

        #fillLedConfigSave()

        methodret

        errtrap1:
        a=msgbox(errmes(-1),BBjAPI().getConstants().MB_ICONEXCLAMATION,#super!.getTranslator().getTranslation("CANNOT_SAVE"))

    methodend


    method public void onTbConfigDelBtnPush(BBjToolButtonPushEvent ev!)

        user$=#ConfigBucketUser$

        if #fAdminToggle then
            user$=""
        fi

        ConfigBucket.deleteConfigBucket(#ConfigBucketRealm$+"_Config",user$,#LedConfigSave!.getText())
        #fillLedConfigSave()
        #enableConfigSaveButtons()

    methodend


    method public void onTbAdminTogglePush(BBjToolButtonPushEvent ev!)

        #fAdminToggle=ev!.isSelected()

        if #fAdminToggle then
            #LedConfigSave!.setBackColor(BBjAPI().makeColor("ORANGE"))
        else
            #LedConfigSave!.setBackColor(null())
        fi

        #fillLedConfigSave()

    methodend


    method private void fillLedFilterSave()

        sav$=#LedFilterSave!.getEditText()
        #LedFilterSave!.removeAllItems()
        #LedFilterSave!.addItem("")
        #FilterSaveConfigBuckets! = cast(BBjVector, ConfigBucket.enumConfigBuckets(#ConfigBucketRealm$+"_Filter",#ConfigBucketUser$))

        sav=-1

        if #FilterSaveConfigBuckets!.size() then
            for i=0 to #FilterSaveConfigBuckets!.size()-1
                c!=#FilterSaveConfigBuckets!.getItem(i)
                c$=c!.getName()
                #LedFilterSave!.addItem(c$)

                if sav$=c$ then
                    sav=i
                fi
            next
        fi

        #LedFilterSave!.selectIndex(sav+1)

    methodend


    method public void onLedFilterSaveEditModify(BBjEditModifyEvent ev!)

        sav$=#LedFilterSave!.getText()

        #enableFilterSaveButtons()


        if #FilterSaveConfigBuckets!.size() and sav$>"" then
            for i=0 to #FilterSaveConfigBuckets!.size()-1
                c!=#FilterSaveConfigBuckets!.getItem(i)
                c$=c!.getName()

                if sav$=c$ then
                    config! = c!
                    break
                fi
            next
        else
            #FilterStrings!.clear()
            #FilterByDistinct!.clear()
        fi

        if config! <> null() then
            config!.loadBucket()
            #FilterStrings!     = cast(java.util.HashMap, config!.getHashMap())
            #FilterByDistinct!  = cast(java.util.HashMap, config!.getHashMap())
        fi

        img! = BBjAPI().getSysGui().getImageManager().loadImageFromBytes($89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF61000001A04944415478DA63601870D0DADAFA9F149C909808C237E29393BDC106545656FE7FF3E6CDFF1F3F7E80F1C78F1FC1FC274F9EFCBF72E5CAFF6BD7AEFDBF75EBD6FF070F1EFC07A985590C3204CCC8CACAFABF74E952B0A2BB77EFFEDFBD7BF7FF850B17FEAFADADFDAFA3A3F3DFD4D4F4BF8F8FCFFFB4B4B4FF20B51806C4C4C4FC270543BDF0303E29C90F6CC0AA55AB9881122F4A4A4AFEBF7EFD1AEC92D3A74FFF5FB361EFFFFAEEF5FF77EF3DF6BFA8A8E87F7878F88B84A4A423898989F618013969D22451A0822F656565FF3F7FFEFC7FCDDAF5FF4B6AA6FC2F6F5DF71F64707070F097F9F3E74BE08D8D3973E6E8040404FC696C6CFC7FF3D6C3FF53E7EFFE9F9C51F2DFCBCBEBCFE2C58BF5898A52A02D41400DFF67CF9EFB3F23ABE0BF9B9BDBFF79F3E68590942E56AE5C59595151F1DFCFCFEFFFC68D1B6BC84A5C717171B3D5D5D537919D3A8181365D5555750BD906D8D8D82C949797DF4BB6015A5A5A31E2E2E2670C5D5DA5CC9D3DB54CDDDDB54D3C3CD48D5D7CE58C5D5CF8893244455B678D998B67AE89AB47A4A9B387A9B193A73248B3B1B1312BB23A002745083F1F756D9E0000000049454E44AE426082$)

        if config! <> null() or sav$="" then
            if #FilterGrid! = null() then
                #toggleFilter(null())
            fi

            v!=new BBjVector()

            for i=0 to #FilterGrid!.getNumColumns()-1
                f1$=#FilterGrid!.getCellRelated(0,i)
                f2$=""
                f2!=#FilterStrings!.get(f1$)

                if f2! <> null() then
                    f2$=f2!
                fi

                v!.addItem(f2$)

                tmp! = #FilterByDistinct!.get(f1$)

                if tmp!=null() then
                    #FilterGrid!.setCellImage(0,i,null())
                else
                    #FilterGrid!.setCellImage(0,i,img!)
                fi
            next

            #FilterGrid!.setCellText(0,0,v!)

            #applyFilter()
        fi

    methodend


    method private void enableFilterSaveButtons()

        if #LedFilterSave!<>null() and #TbFilterSave!<>null() and #TbFilterDel! <> null() then
            fenable1 = #LedFilterSave!.getText() > ""
            fenable2 = #FilterStrings!.size() + #FilterByDistinct!.size()

            fenable3 = 0
            sav$=#LedFilterSave!.getText()

            if #FilterSaveConfigBuckets!.size() then
                for i=0 to #FilterSaveConfigBuckets!.size()-1
                    c!=#FilterSaveConfigBuckets!.getItem(i)
                    c$=c!.getName()

                    if sav$=c$ then
                        fenable3 = 1
                        break
                    fi
                next
            fi

            #TbFilterSave!.setEnabled(fenable1 AND fenable2)
            #TbFilterDel!.setEnabled(fenable1 AND fenable3)
        fi

    methodend


    method public void onTbFilterSaveBtnPush(BBjToolButtonPushEvent ev!)

        c! = new ConfigBucket(#ConfigBucketRealm$+"_Filter",#ConfigBucketUser$,#LedFilterSave!.getEditText())
        c!.put(#FilterStrings!)

        c!.put(#FilterByDistinct!,err=*next)

        c!.saveBucket()

        #fillLedFilterSave()

    methodend


    method public void onTbFilterDelBtnPush(BBjToolButtonPushEvent ev!)

        ConfigBucket.deleteConfigBucket(#ConfigBucketRealm$+"_Filter",#ConfigBucketUser$,#LedFilterSave!.getText())
        #fillLedFilterSave()
        #enableFilterSaveButtons()

    methodend


    method public void toggleFilter(BBjToolButtonPushEvent ev!)

        if #FilterGrid! = null() then
            if #Grid!.getHasRowHeader() then
                rhw = #Grid!.getRowHeaderWidth()
            fi

            #FilterGrid! = #getWnd().addGrid(111,rhw,26,#getW(),25,$0010$,1,0)

            #this!.setGridPosition()
            #adjustFilterGrid()

            #FilterGrid!.setVisible(1)
            #FilterGrid!.setEditClickCount(1)
            #FilterGrid!.setEditable(1)
            #FilterGrid!.setRowHeight(#GridRowHeight)

            #FilterGrid!.setCallback(BBjGrid.ON_GRID_EDIT_STOP,#this!,"onFilterEditStop")
            #FilterGrid!.setCallback(BBjGrid.ON_GRID_CELL_QUERY,#this!,"onFilterQuery")

            #TbFilter!.setSelected(1)
        else
            #FilterGrid!.destroy()
            #FilterGrid! = null()
            #this!.setGridPosition()

            #FilterStrings! = new java.util.HashMap()
            #FilterByDistinct! = new java.util.HashMap()

            #applyFilter()
            #TbFilter!.setSelected(0)
        fi

    methodend


    method public void toggleFilterGeo(BBjToolButtonPushEvent ev!)

        if #TbFilterGeo!.isSelected() then
            dlg! = new GoogleMapsAreaChooserDialog()

            if dlg!.doModal() then

                #getBC().setGeoFilter(dlg!.getMarker(), dlg!.getRadius())
            else
                #TbFilterGeo!.setSelected(0)
            fi
        else
            #getBC().setGeoFilter(null(), 0)
        fi

    methodend


    method public void onFilterQuery(BBjGridCellQueryEvent ev!)

        c = ev!.getColumn()
        f$=#FilterGrid!.getCellRelated(0,c)

        if #QueryFilter!.size() = 0 then
            distinct! = #FilterByDistinct!.get(f$)
        fi

        if distinct! = null() then
            distinct_tmp! = #FilterByDistinct!.get(f$)

            distinct! = #super!.getBC().getDistinctValues(f$)

            if distinct_tmp! <> null() then
                ks! = distinct_tmp!.keySet()
                it!=ks!.iterator()

                while it!.hasNext()
                    k$=it!.next()
                    v=distinct_tmp!.get(k$)

                    if v=0 then
                        tmp! = distinct!.get(k$)

                        if tmp!<>null() then
                            distinct!.put(k$,0)
                        fi
                    fi
                wend
            fi


            #FilterByDistinct!.put(f$,distinct!)
        fi

        #FilterGrid!.accept(1)

        c1=ev!.getColumn()
        c=#FilterGrid!.getLeftColumn()

        offsx=15
        offsy = 80

        while c<c1
            offsx=offsx+#FilterGrid!.getColumnWidth(c)
            c=c+1
        wend

        p1!=#super!.getWnd()
        offsx=offsx+p1!.getX()
        offsy=offsy+p1!.getY()

        while 1
            p1! = p1!.getParentWindow(err=*break)
            offsx=offsx+p1!.getX()
            offsy=offsy+p1!.getY()
        wend

        rem offsx=offsx+p1!.getX()
        rem offsy=offsy+p1!.getY()

        if #Grid!.getHasRowHeader() then
            offsx=offsx+#Grid!.getRowHeaderWidth()
        fi

        offsx=min(offsx,p1!.getWidth()+p1!.getX()-250)

        declare DistinctFilterPopup p!

        p! = new DistinctFilterPopup(#super!.getWnd(),offsx,offsy,distinct!)

        if p!.getAborted()=0 then
            distinct! = p!.getDistinct()

            rem check if all are yes, if so remove the filter

            ks! = distinct!.keySet()
            it! = ks!.iterator()
            no=0

            while it!.hasNext()
                k$=it!.next()
                state= distinct!.get(K$)

                if state=0 then
                    no=1
                    break
                fi
            wend


            if no=0 then
                #FilterByDistinct!.remove(f$)

                #FilterGrid!.setCellImage(0,c,null())
            else
                img! = BBjAPI().getSysGui().getImageManager().loadImageFromBytes($89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF61000001A04944415478DA63601870D0DADAFA9F149C909808C237E29393BDC106545656FE7FF3E6CDFF1F3F7E80F1C78F1FC1FC274F9EFCBF72E5CAFF6BD7AEFDBF75EBD6FF070F1EFC07A985590C3204CCC8CACAFABF74E952B0A2BB77EFFEDFBD7BF7FF850B17FEAFADADFDAFA3A3F3DFD4D4F4BF8F8FCFFFB4B4B4FF20B51806C4C4C4FC270543BDF0303E29C90F6CC0AA55AB9881122F4A4A4AFEBF7EFD1AEC92D3A74FFF5FB361EFFFFAEEF5FF77EF3DF6BFA8A8E87F7878F88B84A4A423898989F618013969D22451A0822F656565FF3F7FFEFC7FCDDAF5FF4B6AA6FC2F6F5DF71F64707070F097F9F3E74BE08D8D3973E6E8040404FC696C6CFC7FF3D6C3FF53E7EFFE9F9C51F2DFCBCBEBCFE2C58BF5898A52A02D41400DFF67CF9EFB3F23ABE0BF9B9BDBFF79F3E68590942E56AE5C59595151F1DFCFCFEFFFC68D1B6BC84A5C717171B3D5D5D537919D3A8181365D5555750BD906D8D8D82C949797DF4BB6015A5A5A31E2E2E2670C5D5DA5CC9D3DB54CDDDDB54D3C3CD48D5D7CE58C5D5CF8893244455B678D998B67AE89AB47A4A9B387A9B193A73248B3B1B1312BB23A002745083F1F756D9E0000000049454E44AE426082$)

                #FilterGrid!.setCellImage(0,c,img!)
            fi

            #applyFilter()
        fi

        #FilterGrid!.endEdit(1)
        rem #FilterGrid!.deselectAllCells()

        BBjAPI().getSysGui().flushEvents()

        #enableFilterSaveButtons()

    methodend


    method public void onFilterEditStop(BBjGridEditStopEvent ev!)

        rem workaround for Bug 24936 - BBjGridEditStopEvent fired twice upon end edit of a cell
        BBjAPI().getSysGui().flushEvents()

        same=1

        declare java.util.HashMap newFilterStrings!
        newFilterStrings! = new java.util.HashMap()

        for i=0 to #FilterGrid!.getNumColumns()-1
            f$=#FilterGrid!.getCellText(0,i)
            f1$=#FilterGrid!.getCellRelated(0,i)

            if f$>"" then
                newFilterStrings!.put(f1$,f$)
            fi

            if f$ <> str(#FilterStrings!.get(f1$)) then
                same=0
            fi
        next

        if same=0 then
            #FilterStrings! = newFilterStrings!
            #applyFilter()
        fi

        #scrollFilterGrid()

        #enableFilterSaveButtons()

    methodend


    method private void applyFilter()

        #QueryFilter! = new java.util.HashMap()

        ks! = #FilterStrings!.keySet()
        it!=ks!.iterator()

        while it!.hasNext()
            f$=it!.next()
            v!=null()

            if f$>"" then
                fs$=#FilterStrings!.get(f$)
                v!=#QueryFilter!.get(f$)

                if v!=null() then
                    v!=new BBjVector()
                    #QueryFilter!.put(f$,v!)
                fi

                v!.addItem(fs$)
            fi
        wend

        ks! = #FilterByDistinct!.keySet()
        it!=ks!.iterator()

        while it!.hasNext()
            f$=it!.next()
            v!=null()

            if f$>"" then
                fs!=#FilterByDistinct!.get(f$)

                v!=#QueryFilter!.get(f$)

                if v!=null() then
                    v!=new BBjVector()
                    #QueryFilter!.put(f$,v!)
                fi

                ks1! = fs!.keySet()
                it1! = ks1!.iterator()

                while it1!.hasNext()
                    k$=it1!.next()
                    v=fs!.get(k$)

                    if v then
                        v!.addItem(k$)
                    fi
                wend
            fi
        wend

        #super!.getBC().setQueryFilter(#QueryFilter!)

    methodend


    method private void adjustFilterGrid()

        if #FilterGrid! <> null() then
            fieldcount=#Grid!.getNumColumns()
            #FilterGrid!.setNumColumns(fieldcount)

            reldata! = new BBjVector()

            i=0

            for col=0 to #ColumnConfig!.size()-1
                columnConfig! = #ColumnConfig!.getItem(col)

                if columnConfig!.getFieldAsNumber("VISIBLE")=0 then
                    continue
                fi

                #FilterGrid!.setColumnAlignment(i,#Grid!.GRID_ALIGN_LEFT)
                #FilterGrid!.setColumnWidth(i,columnConfig!.getFieldAsNumber("WIDTH"))

                if #AllowFilterByDistinct then
                    #FilterGrid!.setCellHasQuery(0,i,1)
                fi

                x$=columnConfig!.getFieldAsString("NAME")
                reldata!.addItem(x$)

                i=i+1
            next

            #FilterGrid!.setCellRelated(0,0,reldata!)

            #scrollFilterGrid()
        fi

    methodend


    method private void scrollFilterGrid()

        if #FilterGrid! <>null() then
            a= #Grid!.getLeftColumn()
            #Grid!.setLeftColumn(a)
            #FilterGrid!.setLeftColumn(a)
        fi

    methodend


    method public void doConfig(BBjToolButtonPushEvent ev!)

        declare NavigationGridComponentConfigDialog dlg!
        dlg! = new NavigationGridComponentConfigDialog()

        dlg!.setGridColumns(#ColumnConfig!)

        if dlg!.doModal() then
            #InitGrid=1
            #ColumnConfig! = dlg!.getGridColumns()
            #pullRowsToGrid(0)
        fi

    methodend


    method public void doExcel(BBjToolButtonPushEvent ev!)

        filename$=filesave("Excel Files","\",#FilenameExcel$,"Excel Files"+$0a$+".xls",MODE="CLIENT")

        if filename$<>"::CANCEL::" then
            wb! = new HSSFWorkbook()

            rem create a exel sheet
            sheet!= wb!.createSheet()
            wb!.setSheetName(0,"BBj Grid Copy")

            rem Format Objekt

            format! = wb!.createDataFormat()
            palette!=wb!.getCustomPalette()

            rem Variablen
            byte! = new Byte("0")
            short!= new Short("0")
            double! = new Double("0")

            rem Header erstellen und fixieren !
            header = #Grid!.getHasColumnHeader()

            if header = 1  then
                sheet!.createFreezePane(0,1)
                font!=wb!.createFont()
                style!= wb!.createCellStyle()

                textcol! = #Grid!.getColumnHeaderForeColor()
                gridcol! = #Grid!.getColumnHeaderBackColor()

                row! = sheet!.createRow(0)

                for c=0 to #Grid!.getNumColumns()
                    columntext$ = #Grid!.getColumnHeaderCellText(c)

                    rem TextColor
                    red     = textcol!.getRed()
                    green   = textcol!.getGreen()
                    blue    = textcol!.getBlue()

                    ired!=new java.lang.Integer(str(red))
                    bred!=ired!.byteValue()
                    igreen!=new java.lang.Integer(str(green))
                    bgreen!=igreen!.byteValue()
                    iblue!=new java.lang.Integer(str(blue))
                    bblue!=iblue!.byteValue()

                    hsTextColor!=palette!.findSimilarColor(ired!,igreen!,iblue!)

                    cell!= row!.createCell(short!.valueOf(str(c)))
                    cell!.setCellValue(columntext$)

                    rem BackColor
                    red     = gridcol!.getRed()
                    green   = gridcol!.getGreen()
                    blue    = gridcol!.getBlue()

                    ired!=new java.lang.Integer(str(red))
                    bred!=ired!.byteValue()
                    igreen!=new java.lang.Integer(str(green))
                    bgreen!=igreen!.byteValue()
                    iblue!=new java.lang.Integer(str(blue))
                    bblue!=iblue!.byteValue()

                    hsColor!=palette!.findSimilarColor(ired!,igreen!,iblue!)

                    style!.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND)
                    style!.setFillForegroundColor(hsColor!.getIndex())

                    style!.setBorderLeft(short!.valueOf(str(1)))
                    style!.setBorderRight(short!.valueOf(str(1)))

                    rem Text "Zentriert", Farbe
                    font!.setColor(hsTextColor!.getIndex())
                    style!.setFont(font!)
                    style!= wb!.createCellStyle()
                    style!.setAlignment(short!.valueOf(str(2)))
                    cell!.setCellStyle(style!)
                next c
            else
                header = 0
            fi

            rem Zellen beschreiben

            for r=header to #Grid!.getNumRows()
                row! = sheet!.createRow(r)

                for c=0 to #Grid!.getNumColumns() - 1
                    rem BBj Cell Text auslesen
                    text$ = #Grid!.getCellText(r - header,c)
                    width = #Grid!.getColumnWidth(c)
                    inputstyle = #Grid!.getCellStyle(r - header, c)

                    rem Fonteingenschaften auslesen
                    fontbbj! = #Grid!.getCellFont(r - header,c)
                    size = fontbbj!.getSize()
                    fontname$ = fontbbj!.getName()
                    style = fontbbj!.getStyle()
                    align = #Grid!.getCellAlignment(r - header,c)

                    rem Background Color (Read)
                    style!= wb!.createCellStyle()

                    gridcol!=#Grid!.getCellBackColor(r - header,c)

                    red     = gridcol!.getRed()
                    green   = gridcol!.getGreen()
                    blue    = gridcol!.getBlue()

                    ired!=new java.lang.Integer(str(red))
                    bred!=ired!.byteValue()
                    igreen!=new java.lang.Integer(str(green))
                    bgreen!=igreen!.byteValue()
                    iblue!=new java.lang.Integer(str(blue))
                    bblue!=iblue!.byteValue()

                    rem Background Color (Write)
                    hsColor!=palette!.findSimilarColor(ired!,igreen!,iblue!)

                    style!.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND)
                    style!.setFillForegroundColor(hsColor!.getIndex())

                    rem Rahmenlinien
                    style!.setBorderLeft(short!.valueOf(str(1)))
                    style!.setBorderRight(short!.valueOf(str(1)))
                    style!.setBorderBottom(short!.valueOf(str(1)))
                    style!.setBorderTop(short!.valueOf(str(1)))

                    rem Cell Excel Erstellen
                    short!=short!.valueOf(str(c))
                    cell!= row!.createCell(short!.shortValue())

                    rem Cell Format Excel erstellen

                    if cvs(text$,3) <> "" then
                        sheet!.setColumnWidth(c, width*30)
                        font!=wb!.createFont()

                        rem Text Color (Read)
                        textcol!=#Grid!.getCellForeColor(r - header,c)

                        red     = textcol!.getRed()
                        green   = textcol!.getGreen()
                        blue    = textcol!.getBlue()

                        ired!=new java.lang.Integer(str(red))
                        bred!=ired!.byteValue()
                        igreen!=new java.lang.Integer(str(green))
                        bgreen!=igreen!.byteValue()
                        iblue!=new java.lang.Integer(str(blue))
                        bblue!=iblue!.byteValue()

                        hsTextColor!=palette!.findSimilarColor(ired!,igreen!,iblue!)

                        if size>0 then font!.setFontHeightInPoints(short!.valueOf(str(size)))
                        font!.setFontName(fontname$)

                        rem Text Ausrichtung festlegen, 0 links, 1 rechts, 2 zentriert

                        switch align
                            case 0; style!.setAlignment(short!.valueOf(str(1))); break
                            case 1; style!.setAlignment(short!.valueOf(str(3))); break
                            case default; style!.setAlignment(short!.valueOf(str(2))); break
                        swend

                        rem Fett, Kursiv, Unterstrichen festlegen

                        switch style
                            case 1; font!.setBoldweight(short!.valueOf("700")); break
                            case 2; font!.setItalic(1); break
                            case 3; font!.setBoldweight(short!.valueOf("700")); font!.setItalic(1); break
                            case 16; font!.setUnderline(byte!.valueOf("1")); break
                            case 17; font!.setUnderline(byte!.valueOf("1")); font!.setBoldweight(short!.valueOf("700")); break
                            case 18; font!.setUnderline(byte!.valueOf("1")); font!.setItalic(1); break
                            case 19; font!.setUnderline(byte!.valueOf("1")); font!.setBoldweight(short!.valueOf("700")); font!.setItalic(1); break
                            case default; break
                        swend

                        rem Cell Style, Color
                        font!.setColor(hsTextColor!.getIndex())
                        style!.setFont(font!)
                    fi


                    rem Zelle schreiben

                    if inputstyle = 512  AND cvs(text$,3) <> "" and 1=2 then
                        rem InputD Maske auslesen und text richtig parsen
                        rem Aktuelle nur Standard Maske von InputD (mmttjjjj)
                        rem Fehler abgefangen wenn Text mit "/" gespeichert wird

                        declare BBjString text!
                        text! = text$

                        datum! = new java.util.Date()

                        anzahl = pos("/"=text!,1,0)

                        if anzahl = 0 then
                            sdf! = new SimpleDateFormat("MMddyyyy")
                        else
                            text! = text!.replace("/", "")
                            sdf! = new SimpleDateFormat("MMddyy")
                        fi

                        datum! = sdf!.parse(text!)

                        style!.setDataFormat(format!.getFormat("dd/mm/yyyy"))
                        cell!.setCellType(0)
                        cell!.setCellValue(datum!)
                    else
                        ok=0
                        ok=num(text$,err=*next);ok=1

                        rem Zahlen wie "001" nicht als "1" speichern

                        if len(text$) >= 2 then
                            ex = num(text$(1,2),err=*next)

                            if ex = 0 or ex = 1 and text$(1,1) = "0" and text$(2,1) <> "." then
                                ok = 0
                            fi
                        fi

                        if ok then
                            zahl=num(text$)

                            if zahl=0 then
                                t$=""
                                cell!.setCellValue(t$)
                            else
                                cell!.setCellType(0)
                                cell!.setCellValue(double!.valueOf(zahl))
                            endif
                        else
                            cell!.setCellType(1)
                            cell!.setCellValue(text$)
                        endif
                    fi

                    cell!.setCellStyle(style!)
                    text$=""
                next c
            next r

            rem path setting must be absolute
            declare java.io.File temp!
            temp! = File.createTempFile("bbj",".xls")

            tempname$=temp!.getAbsolutePath()

            fileOut!= new FileOutputStream(tempname$)
            wb!.write(fileOut!)
            fileOut!.close()


            ctemp! = File@.createTempFile("bbj",".xls")
            ctempname$=ctemp!.getAbsolutePath()

            BBjAPI().getThinClient().getClientFileSystem().getClientFile(filename$).copyToClient(tempname$)
            erase tempname$
        fi

    methodend


    rem callback methods

    rem callback functions for Business Component
    rem /**
    rem * Method setEditing
    rem * invoked from BusinessComponent if a UI component started editing a record in the resultset
    rem * @param BBjNumber isEditing: -1 = i
    rem */
    method public void setEditing(BBjNumber isEditing)

        if !#this!.getIsStandalone() then
            #getWnd().setEnabled(!isEditing)
        fi

    methodend


    rem /**
    rem * Method onPartialUpdate
    rem * invoked from Business Component, broadcasting the change of a record
    rem * @param BBjNumber recno: the record number within the resultset that has been updated
    rem */
    method public void onPartialUpdate(BBjNumber recno)

        rem TODO

    methodend


    rem /**
    rem * Method onBroadcastEdit:
    rem * called by BC to notify the UI about an ongoing edit from a different side
    rem * @param BBjNumber recNo: the record number that was edited
    rem * @param BBjString fieldName$: the field name that just was edited
    rem * @param BBjSting newContent$: the new Contents of the field
    rem */
    method public void onBroadcastEdit(BBjNumber recNo, BBjString fieldName$, BBjString newContent$)

        if #ColumnNames!.size() then
            for i=0 to #ColumnNames!.size()-1
                if #ColumnNames!.get(i) = fieldName$ then
                    #Grid!.setCellText(recNo,i,newContent$)
                fi
            next
        fi

    methodend

classend

