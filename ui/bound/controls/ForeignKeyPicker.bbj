use ::components/bl/BusinessComponent.bbj::BusinessComponent
use ::components/db/DataRow.bbj::DataRow
use ::components/db/DataRow.bbj::DataField
use ::components/ui/bound/UIComponent.bbj::UIComponent
use ::components/ui/bound/grid/NavigationGridComponent.bbj::NavigationGridComponent


class public ForeignKeyPicker extends UIComponent

    field private BBjControl        BoundCtrl!
    field private BBjString         Fk$

    field private UIComponent       ForeignKeyForm!

    rem fields for picker toolbutton
    field private BBjToolButton     TbPick!
    field private BBjToolButton     TbClear!
    field private BBjStaticText     StDisp!

    rem fields for version with combobox
    field private java.util.HashMap KeyMap!
    field private BBjVector         IndexToKeyMap!


    method private ForeignKeyPicker()


    methodend

    method public ForeignKeyPicker(BBjWindow wnd!, BBjNumber id, BBjControl ctrl!, BusinessComponent bc!, BBjString fk$)

        #super!(wnd!,id,x,y,w,h)

        #BoundCtrl! = ctrl!


        if #BoundCtrl!.getControlType() = BBjControl.LISTBUTTON_TYPE OR #BoundCtrl!.getControlType() = BBjControl.LISTBOX_TYPE then
            bc!.setControllerFilterUnlock(fk$,1)

            #KeyMap!        = new java.util.HashMap()
            #IndexToKeyMap! = new BBjVector()
            x=0
            s=bc!.size()
            bc!.prepareResultSet(0,s)

            ctrl1! = #BoundCtrl!
            ctrl1!.removeAllItems()
            
            ctrl1!.addItem("")
            #IndexToKeyMap!.addItem("")

            while x<s
            

                r! = bc!.getResultSet().getItem(x)
                fkdisp$ = r!.toString()
                
                
                fkval$     = r!.getFieldAsString(fk$)
                fkval!     = r!.getField(fk$)
                ctrl1!.addItem(cvs(FkDisp$,3))

                x=x+1
                #KeyMap!.put(fkval!,x)
                #IndexToKeyMap!.addItem(fkval!)
            wend


            bc!.setControllerFilterUnlock(fk$,0)

        else

            x=ctrl!.getX()
            y=ctrl!.getY()
            w=ctrl!.getWidth()
            h=ctrl!.getHeight()
            #super!.getWnd().setLocation(x+w+2,y)
            #super!.getWnd().setSize(h+300,h)

            #TbPick! = #super!.getWnd().addToolButton(100,0+h,0,h,h,"")
            #TbPick!.setCallback(BBjAPI.ON_TOOL_BUTTON_PUSH,#this!,"onTbPickPush")
            img!=BBjAPI().getSysGui().getImageManager().loadImageFromBytes
            #TbPick!.setImage(img!)
            #TbPick!.setOpaque(0)

            #TbClear! = #super!.getWnd().addToolButton(110,0,0,h,h,"")
            #TbClear!.setCallback(BBjAPI.ON_TOOL_BUTTON_PUSH,#this!,"onTbClearPush")
            img!=BBjAPI().getSysGui().getImageManager().loadImageFromBytes($89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF610000024C4944415478DADD52DD4B9A511C7E4314228A4A0C02090AFA009392220A05234ACA3E28687D504110041514D335A15DE4580B620C0632B6DAEBA53713166C835D6875E1C672D88750A86F9BE9F6CE77AFBE8E8475E1263D3BC66E34EA0FD8811F87C339CFF37BCEF37B28EAFF5CB7294A49CA4E8A25857F7BFAACBC1168A6288981A2EEDD97C97E7B2726706632E1626909427F3FDC7575B82B1627D3F7B7284A745D67CBABC646706B6B381C1CC4CF8505FC999D05AFD7E35369295EE7E4E0A944823B2291E50AD848519A47858588ACAEC2B7BC8CF8D1111C151570E5E7E35D5E1EBE6C6EC2D5DB8B2D42F0A4A000A6DC5C4D76779B87483D209D059F0F8944023F3C9E4BE9DF1D0EC462317CDBDB83ABA8085B6565782095DAB209587E6E0EECD4143E34358173BB210802E2F138789E074714315A2DA22A15A2CDCD782C97B3D904C9CFADAD085455E1582EC7B15A0D81E3C030CC25C1C9E424626D6DC0C000529D9D785E5D9DCC20581489D8F752290E4A4A70585383C8EE2E2291083842120E8711F67A11181A82D0DD8D5F84E4855299A960512CB6BD2560373132BCBD0D96651126DF60C6C670BAB383502884D3FD7DF8753AF8FBFA40AB54991EA45D7D269321585909863C0812E3023D3D88933CF8474610743A71623643181FC71B42626D68D05C19E5C3E2E275A742019E98146A69C1D9F030603020313F8FAFD3D38812933F8E8EC2AAD5AE5F9B444B79F90A5D5B9BF27575E19C187741C2746E34C23733035AAF4FD1EDED2B2F150AC98D91DE5028EA89443BAD567334191D0171569DCEBED1D1519FFDF62FF07554B319855BD50000000049454E44AE426082$)
            #TbClear!.setImage(img!)
            #TbClear!.setOpaque(0)


            #StDisp! = #super!.getWnd().addStaticText(101,2*h+5,5,200,h,"")


            c! = #BoundCtrl!
            c!.setEditable(0)
            rem TODO: allow direct entry of key values
        fi

        #Fk$        = fk$


        #super!.setBC(bc!)

    methodend

    method public void refresh( BBjNumber resetFilter)

        #displayData()

    methodend


    method public void onSelectionChange()

        #displayData()

    methodend

    method public void displayData()

        if #BoundCtrl!.getControlType() = BBjControl.LISTBUTTON_TYPE or #BoundCtrl!.getControlType() = BBjControl.LISTBOX_TYPE then
   
        

            #getBC().prepareResultSet(0,0)

            ctrl! = #BoundCtrl!

            if #getBC().size()=1 then
                declare DataRow r!
                r! = cast(DataRow,#getBC().getResultSet().getItem(0))
                fk!     = r!.getField(#Fk$)
                fkdisp$ = cvs(r!.toString(),3)
                i!= #KeyMap!.get(fk!)

                if i!=null() then
                    ctrl!.selectIndex(-1)
                else
                    i=num(i!)
                    ctrl!.selectIndex(i)
                fi

            else
                ctrl!.selectIndex(-1)

            fi


        else

            #getBC().prepareResultSet(0,0)

            if #getBC().size()=1 then
                declare DataRow r!
                r! = cast(DataRow,#getBC().getResultSet().getItem(0))

                fk$     = r!.getFieldAsString(#Fk$)
                fkdisp$ = cvs(r!.toString(),3)
                #BoundCtrl!.setText(fk$)
                #StDisp!.setText(fkdisp$)
                #TbClear!.setEnabled(1)
            else
                #BoundCtrl!.setText("")
                #StDisp!.setText("")
                #TbClear!.setEnabled(0)
            fi

        fi

    methodend


    method public void onTbClearPush(BBjToolButtonPushEvent ev!)

        #BoundCtrl!.setText("")
        #BoundCtrl!.focus()
        #StDisp!.setText("")        
        #super!.getBC().drive(#Fk$,new BBjVector())
        
        

    methodend

    method public void onTbPickPush(BBjToolButtonPushEvent ev!)

        oldv! = #getBC().getSelection().clone()
        oldText$ = #BoundCtrl!.getText()

        #super!.getBC().setAllowFilter(1)

        #BoundCtrl!.focus()
        ng! = new NavigationGridComponent(null(),100,#super!.getParentWnd().getX(),#super!.getParentWnd().getY()+30,640,480)
        ng!.setShowToolbar(1)
        ng!.setShowTbFilter(1)

        ng!.setBC(#super!.getBC())
        #super!.getBC().setControllerFilterUnlock(#Fk$,1)

        if ng!.doModal() then

            dr! = ng!.getSelectedRows()

            if dr!.size()=1 then
                row=dr!.getItem(0)
                ? "selected row ",row
                #getBC().prepareResultSet(row,row)
                row! = #super!.getBC().getResultSet().getItem(row)

                newText$=row!.getFieldAsString(#Fk$)
                newfkdisp$ = row!.toString()
            fi

        fi

        #super!.getBC().setControllerFilterUnlock(#Fk$,0)

        if newText$>"" then
            #BoundCtrl!.setText(newText$)
            #StDisp!.setText(newfkdisp$)
            v!=new BBjVector()
            v!.addItem(newText$)
            #super!.getBC().drive(#Fk$,v!)
        fi

    methodend

    method public Object getSelectedForeignKeyValue()

        if #BoundCtrl!.getControlType() = BBjControl.LISTBUTTON_TYPE OR #BoundCtrl!.getControlType() = BBjControl.LISTBOX_TYPE then
            ctrl! = #BoundCtrl!

            i=ctrl!.getSelectedIndex()
            fk!=#IndexToKeyMap!.get(i)
        else
            fk!=#BoundCtrl!.getText()
        fi


        methodret fk!


    methodend

    method public void setForeignKeyFormLink(UIComponent uic!)

        #ForeignKeyForm!=uic!
        #ForeignKeyForm!.setBC(#super!.getBC())

        if #BoundCtrl!.getControlType() = BBjControl.LISTBUTTON_TYPE OR #BoundCtrl!.getControlType() = BBjControl.LISTBOX_TYPE then
            rem TODO implement foreign key form link, maybe by rightclick popup
        else

            #StDisp!.setForeColor(BBjAPI().makeColor("BLUE"))

            declare BBjFont font!
            font! = #StDisp!.getFont()
            font1! = BBjAPI().getSysGui().makeFont(font!.getName(), font!.getSize(), BBjFont.FONT_UNDERLINE)
            #StDisp!.setFont(font1!)

            tbHyperlink! = #super!.getWnd().addToolButton(200,#StDisp!.getX(),#StDisp!.getY(),#StDisp!.getWidth(),#StDisp!.getHeight(),"")
            tbHyperlink!.setOpaque(0)
            tbHyperlink!.setCallback(BBjAPI.ON_TOOL_BUTTON_PUSH,#this!,"onTbHyperlinkPush")

        fi

    methodend

    method public void onTbHyperlinkPush(BBjToolButtonPushEvent ev!)

        Selection! = #super!.getBC().getSelection()

        if Selection!.size()=0 then
            Selection!.addItem(0)
        fi

        #super!.getBC().setSelection(Selection!)
        #ForeignKeyForm!.doModal()

    methodend

    method public void setEnabled(BBjNumber fEnable)

       if #BoundCtrl!.getControlType() = BBjControl.LISTBUTTON_TYPE OR #BoundCtrl!.getControlType() = BBjControl.LISTBOX_TYPE then
                #BoundCtrl!.setEnabled(fEnable)
       else
                #BoundCtrl!.setEnabled(fEnable)
                #TbPick!.setEnabled(fEnable)
                #TbClear!.setEnabled(fEnable)
       fi       

    methodend

classend










